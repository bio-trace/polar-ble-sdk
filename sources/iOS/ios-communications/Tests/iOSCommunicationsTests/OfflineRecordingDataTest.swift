//  Copyright Â© 2023 Polar. All rights reserved.

import XCTest
@testable import iOSCommunications

final class OfflineRecordingDataTest: XCTestCase {
    
    func testHeaderParsingFromOfflineRecordingData() throws {
        // Act
        let offlineAccData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: MockAccOfflineRecordingData.accOfflineFrame, type: PmdMeasurementType.acc)
        
        // Assert
        XCTAssertTrue(offlineAccData.data is AccData)
        XCTAssertEqual(MockAccOfflineRecordingData.headerMagic, offlineAccData.offlineRecordingHeader.magic)
        XCTAssertEqual(MockAccOfflineRecordingData.headerVersion, offlineAccData.offlineRecordingHeader.version)
        XCTAssertEqual(MockAccOfflineRecordingData.headerFree, offlineAccData.offlineRecordingHeader.free)
        XCTAssertEqual(MockAccOfflineRecordingData.headerEswHash, offlineAccData.offlineRecordingHeader.eswHash)
        
    }
    
    func testStartTimeParsingFromOfflineRecordingData() throws {
        // Arrange
        let dateFormatter = ISO8601DateFormatter()
        dateFormatter.formatOptions = [.withInternetDateTime]
        let expectedDate = dateFormatter.date(from: MockAccOfflineRecordingData.expectedDateString)
        
        // Act
        let offlineAccData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: MockAccOfflineRecordingData.accOfflineFrame, type: PmdMeasurementType.acc)
        
        // Assert
        XCTAssertEqual(expectedDate, offlineAccData.startTime)
    }
    
    func testSettingsParsingFromOfflineRecordingData() throws {
        // Act
        let offlineAccData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: MockAccOfflineRecordingData.accOfflineFrame, type: PmdMeasurementType.acc)
        
        // Assert
        XCTAssertEqual(MockAccOfflineRecordingData.expectedSampleRate, offlineAccData.recordingSettings?.settings[PmdSetting.PmdSettingType.sampleRate]?.first)
        
        XCTAssertEqual(MockAccOfflineRecordingData.expectedRange, offlineAccData.recordingSettings?.settings[PmdSetting.PmdSettingType.range]?.first)
        
        XCTAssertEqual(MockAccOfflineRecordingData.expectedResolution, offlineAccData.recordingSettings?.settings[PmdSetting.PmdSettingType.resolution]?.first)
        
        XCTAssertEqual(MockAccOfflineRecordingData.expectedChannels, offlineAccData.recordingSettings?.settings[PmdSetting.PmdSettingType.channels]?.first)
    }
    
    func testParseAccFromOfflineRecordingData() throws {
        // Act
        let offlineAccData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: MockAccOfflineRecordingData.accOfflineFrame, type: PmdMeasurementType.acc)
        
        // Assert
        XCTAssertTrue(offlineAccData.data is AccData)
        XCTAssertEqual(MockAccOfflineRecordingData.sample0Channel0, (offlineAccData.data as! AccData).samples[0].x)
        XCTAssertEqual(MockAccOfflineRecordingData.sample0Channel1, (offlineAccData.data as! AccData).samples[0].y)
        XCTAssertEqual(MockAccOfflineRecordingData.sample0Channel2, (offlineAccData.data as! AccData).samples[0].z)
        
        XCTAssertEqual(MockAccOfflineRecordingData.sample1Channel0, (offlineAccData.data as! AccData).samples[1].x)
        XCTAssertEqual(MockAccOfflineRecordingData.sample1Channel1, (offlineAccData.data as! AccData).samples[1].y)
        XCTAssertEqual(MockAccOfflineRecordingData.sample1Channel2, (offlineAccData.data as! AccData).samples[1].z)
        
        XCTAssertEqual(MockAccOfflineRecordingData.expectedLastSampleTimeStamp, (offlineAccData.data as! AccData).samples.last?.timeStamp)
    }
    
    func testParseGyroFromOfflineRecordingData() throws {
        // Act
        let offlineGyroData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: GyroOfflineMockData.gyroOfflineFrame, type: PmdMeasurementType.gyro)
        
        // Assert
        XCTAssertTrue(offlineGyroData.data is GyrData)
        XCTAssertEqual(GyroOfflineMockData.sample0Channel0, (offlineGyroData.data as! GyrData).samples[0].x)
        XCTAssertEqual(GyroOfflineMockData.sample0Channel1, (offlineGyroData.data as! GyrData).samples[0].y)
        XCTAssertEqual(GyroOfflineMockData.sample0Channel2, (offlineGyroData.data as! GyrData).samples[0].z)
        
        XCTAssertEqual(GyroOfflineMockData.sample1Channel0, (offlineGyroData.data as! GyrData).samples[1].x)
        XCTAssertEqual(GyroOfflineMockData.sample1Channel1, (offlineGyroData.data as! GyrData).samples[1].y)
        XCTAssertEqual(GyroOfflineMockData.sample1Channel2, (offlineGyroData.data as! GyrData).samples[1].z)
        
        XCTAssertEqual(GyroOfflineMockData.expectedLastSampleTimeStamp, (offlineGyroData.data as! GyrData).samples.last?.timeStamp)
    }
    
    func testParseMagFromOfflineRecordingData() throws {
        // Act
        let offlineMagData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: MagOfflineMockData.magOfflineFrame, type: PmdMeasurementType.mgn)
        
        // Assert
        XCTAssertTrue(offlineMagData.data is MagData)
        XCTAssertEqual(MagOfflineMockData.sample0Channel0, (offlineMagData.data as! MagData).samples[0].x)
        XCTAssertEqual(MagOfflineMockData.sample0Channel1, (offlineMagData.data as! MagData).samples[0].y)
        XCTAssertEqual(MagOfflineMockData.sample0Channel2, (offlineMagData.data as! MagData).samples[0].z)
        
        XCTAssertEqual(MagOfflineMockData.sample1Channel0, (offlineMagData.data as! MagData).samples[1].x)
        XCTAssertEqual(MagOfflineMockData.sample1Channel1, (offlineMagData.data as! MagData).samples[1].y)
        XCTAssertEqual(MagOfflineMockData.sample1Channel2, (offlineMagData.data as! MagData).samples[1].z)
        
        XCTAssertEqual(MagOfflineMockData.expectedLastSampleTimeStamp, (offlineMagData.data as! MagData).samples.last?.timeStamp)
    }
    
    func testParsePpgFromOfflineRecordingData() throws {
        // Act
        let offlinePpgData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: PpgOfflineMockData.ppgOfflineFrame, type: PmdMeasurementType.ppg)
        
        // Assert
        XCTAssertTrue(offlinePpgData.data is PpgData)
        let sample0 = (offlinePpgData.data as! PpgData).samples
        
        XCTAssertEqual(PpgOfflineMockData.sample0Channel0, sample0[0].ppgDataSamples[0])
        XCTAssertEqual(PpgOfflineMockData.sample0Channel1, sample0[0].ppgDataSamples[1])
        XCTAssertEqual(PpgOfflineMockData.sample0Channel2, sample0[0].ppgDataSamples[2])
        XCTAssertEqual(PpgOfflineMockData.sample0Ambient, sample0[0].ambientSample)
    }
    
    func testParsePpiFromOfflineRecordingData() throws {
        // Act
        let offlinePpiData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: PpiOfflineMockData.ppiOfflineFrame, type: PmdMeasurementType.ppi)
        
        // Assert
        XCTAssertTrue(offlinePpiData.data is PpiData)
        
        XCTAssertEqual(PpiOfflineMockData.expectedHeartRate, (offlinePpiData.data as! PpiData).samples[0].hr)
        XCTAssertEqual(PpiOfflineMockData.expectedBlockerBit, (offlinePpiData.data as! PpiData).samples[0].blockerBit)
        XCTAssertEqual(PpiOfflineMockData.expectedIntervalInMs, (offlinePpiData.data as! PpiData).samples[0].ppInMs)
        XCTAssertEqual(PpiOfflineMockData.expectedErrorEstimate, (offlinePpiData.data as! PpiData).samples[0].ppErrorEstimate)
        XCTAssertEqual(PpiOfflineMockData.expectedSkinContactStatus, (offlinePpiData.data as! PpiData).samples[0].skinContactStatus)
        XCTAssertEqual(PpiOfflineMockData.expectedSkinContactSupported, (offlinePpiData.data as! PpiData).samples[0].skinContactSupported)
        
        XCTAssertEqual(PpiOfflineMockData.expectedHeartRate2, (offlinePpiData.data as! PpiData).samples[1].hr)
        XCTAssertEqual(PpiOfflineMockData.expectedBlockerBit2, (offlinePpiData.data as! PpiData).samples[1].blockerBit)
        XCTAssertEqual(PpiOfflineMockData.expectedIntervalInMs2, (offlinePpiData.data as! PpiData).samples[1].ppInMs)
        XCTAssertEqual(PpiOfflineMockData.expectedErrorEstimate2, (offlinePpiData.data as! PpiData).samples[1].ppErrorEstimate)
        XCTAssertEqual(PpiOfflineMockData.expectedSkinContactStatus2, (offlinePpiData.data as! PpiData).samples[1].skinContactStatus)
        XCTAssertEqual(PpiOfflineMockData.expectedSkinContactSupported2, (offlinePpiData.data as! PpiData).samples[1].skinContactSupported)
        
        // calculated manually from ppiOfflineFrame
        XCTAssertEqual(11, (offlinePpiData.data as! PpiData).samples.count)
    }
    
    func testParseHrFromOfflineRecordingData() throws {
        // Act
        let offlineHrData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: HrOfflineMockData.hrOfflineFrame, type: PmdMeasurementType.offline_hr)
        
        // Assert
        XCTAssertTrue(offlineHrData.data is OfflineHrData)
        
        XCTAssertEqual(HrOfflineMockData.expectedSize, (offlineHrData.data as! OfflineHrData).samples.count)
        XCTAssertEqual(HrOfflineMockData.hrSample0, (offlineHrData.data as! OfflineHrData).samples.first?.hr)
        XCTAssertEqual(HrOfflineMockData.hrSample1, (offlineHrData.data as! OfflineHrData).samples[1].hr)
        XCTAssertEqual(HrOfflineMockData.hrSample2, (offlineHrData.data as! OfflineHrData).samples[2].hr)
        XCTAssertEqual(HrOfflineMockData.hrSampleLast, (offlineHrData.data as! OfflineHrData).samples.last?.hr)
    }
    
    func testParseEncryptedAccOfflineRecordingData() throws {
        // Arrange
        let mockEncryptedAccData = try MockEncryptedOfflineRecordingDataAcc()
        
        // Act
        let offlineData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: MockEncryptedOfflineRecordingDataAcc.securedOfflineData, type: PmdMeasurementType.acc, secret: mockEncryptedAccData.security)
        // Assert
        XCTAssertTrue(offlineData.data is AccData)
    }
    
    func testParseEncryptedMagnetometerOfflineRecordingData() throws {
        // Arrange
        let mockEncryptedMagData = try MockEncryptedOfflineRecordingDataMAG()
        
        // Act
        let offlineData = try OfflineRecordingData<Any>.parseDataFromOfflineFile(fileData: MockEncryptedOfflineRecordingDataMAG.securedOfflineData, type: PmdMeasurementType.mgn, secret: mockEncryptedMagData.security)
        // Assert
        XCTAssertTrue(offlineData.data is MagData)
    }
    
    func testPerformanceExample() throws {
        // This is an example of a performance test case.
        self.measure {
            // Put the code you want to measure the time of here.
        }
    }
    
    private static let offlineFrameWithoutData = Data([
        // index       type                                       data:
        // 0           security strategy
        0x00,
        // 1..16       header
        0x2b, 0x4c, 0x7c, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xed, 0xb7, 0x3b, 0x5e,
        // 17..36      start time
        0x32, 0x30, 0x31, 0x37, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x31,
        0x20, 0x31, 0x30, 0x3a, 0x32, 0x36, 0x3a, 0x32, 0x37, 0x00,
        // 37          settings length
        0x00,
        // 38          payload security strategy
        0x00,
    ])
    
    private class MockAccOfflineRecordingData {
        // index       type                                           data:
        // 0           security                                       00
        // 1..4        magic                                          2B 4C 7C 3D
        static let headerMagic: UInt = 0x3D7C4C2B
        
        // 5..8        version                                        01 00 00 00
        static let headerVersion: UInt = 0x01
        
        // 9..12       free                                           00 00 00 00
        static let headerFree: UInt = 0x00
        
        // 13..16      eswHash                                        04 79 C3 5F
        static let headerEswHash: UInt = 0x5FC37904
        
        // 17..36      startTime
        static let expectedDateString = "2017-01-19T08:32:52Z"
        
        // 37..43      settings                                       34 00 10 00 08 00 03
        // 37..38      sample rate                                    34 00
        static let  expectedSampleRate:UInt32 = 0x0034
        // 39..40      resolution                                     10 00
        static let  expectedResolution:UInt32 = 0x0010
        // 41..42      range                                          08 00
        static let expectedRange:UInt32 = 0x0008
        // 43          channels                                       03
        static let expectedChannels:UInt32 = 0x03
        
        // index       type                                       data:
        // 64..69      reference sample                           0xF5, 0xFF, 0x1C, 0x00, 0xE5, 0x03,
        //      Sample 0 (aka. reference sample):
        //      channel 0: FF F5 => 0xFFF5 => -11
        static let sample0Channel0:Int32 = -11
        
        //      channel 1: 1C 00 => 0x001C => 28
        static let sample0Channel1:Int32 = 28
        
        //      channel 2: E5 03 => 0x03E5 => 997
        static let sample0Channel2:Int32 = 997
        
        // 70:      Delta size                                             0x04 (4bits)
        // 71:      Sample amount                                          0x13 (Delta block contains 19 samples)
        // 72:      Sample 1 - channel 0, size 4 bits: 1111 | 0001         0xF1
        static let sample1Channel0:Int32 = sample0Channel0 + 1
        static let sample1Channel1:Int32 = sample0Channel1 - 1
        
        // 73:      Sample 1 - channel 2, size 4 bits: 1110 | 0000        0xE0
        static let sample1Channel2:Int32 = sample0Channel2 + 0
        
        static let expectedLastSampleTimeStamp:UInt64 = 0x777D25DB22F2730 //extracted from accOfflineFrame
        
        static let accOfflineFrame = Data([
            0x00,
            0x2B, 0x4C, 0x7C, 0x3D, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x04, 0x79, 0xC3, 0x5F,
            
            0x32, 0x30, 0x31, 0x37, 0x2D, 0x30, 0x31, 0x2D, 0x31, 0x39,
            0x20, 0x30, 0x38, 0x3A, 0x33, 0x32, 0x3A, 0x35, 0x32, 0x00,
            0x0F,
            0x00, 0x01, 0x34, 0x00,
            0x01, 0x01, 0x10, 0x00,
            0x02, 0x01, 0x08, 0x00,
            0x04, 0x01, 0x03,
            0x00,
            0xE4, 0x00,
            0x02,
            0x24, 0x0C, 0xB5, 0x20, 0x5C, 0xD2, 0x77, 0x07,
            0x81,
            0xF5, 0xFF, 0x1C, 0x00, 0xE5, 0x03,
            0x04, 0x13,
            0xF1, 0xE0,
            0x53,
            0xE0, 0x30, 0xBF, 0x1E, 0x01, 0x3E, 0x1F, 0x2B, 0x14, 0xDF, 0x02, 0x00, 0x1F,
            0x00, 0xF0, 0xE3, 0xD5, 0xB3, 0xE3, 0xC3, 0xDF, 0xF1, 0x22, 0xC2, 0x1D, 0x04,
            0x06, 0x14, 0x84, 0x10, 0xF0, 0xFE, 0x3F, 0xEC, 0x3F, 0x30, 0xFC, 0x00, 0x11,
            0xF8, 0x7B, 0x10, 0x24, 0xBE, 0x8F, 0x1B, 0x80, 0xA0, 0x13, 0x02, 0xB0, 0xF7,
            0x00, 0x01, 0xF4, 0x80, 0x20, 0xF4, 0x3C, 0x30, 0x08, 0x44, 0x00, 0xFC, 0x3D,
            0x0F, 0x00, 0xC4, 0x2E, 0x00, 0x46, 0x0F, 0xF8, 0x04, 0x14, 0x1F, 0x34, 0xBF,
            0x21, 0xF4, 0xAC, 0x31, 0x01, 0x1F, 0x1E, 0x03, 0x24, 0xD1, 0xE9, 0x20, 0xEF,
            0x46, 0x0E, 0x0E, 0x4A, 0x04, 0xFF, 0xD4, 0xE4, 0xAF, 0x4D, 0x12, 0x0E, 0xF5,
            0xCC, 0x06, 0x14, 0x02, 0x01, 0xF8, 0x40, 0x01, 0x08, 0xBA, 0x2F, 0xF8, 0xC1,
            0x8F, 0x04, 0x3E, 0x2F, 0xF0, 0x7D, 0x10, 0x10, 0xFB, 0x10, 0x00, 0xFA, 0xEE,
            0x17, 0x82, 0x01, 0xF8, 0x41, 0x00, 0xF4, 0x80, 0x20, 0xF8, 0xFE, 0xFF, 0x0B,
            0x41, 0x30, 0xF4, 0xC0, 0x1F, 0xFC, 0xFF, 0x00, 0x00, 0x04, 0x14, 0x5F, 0x0E,
            0x0C, 0x01, 0xC0, 0xF2, 0xE1, 0x02, 0x3F, 0x4D, 0x4D, 0x2D, 0x2E, 0x0D, 0x20,
            0xF3, 0xE1, 0xEF, 0x31, 0xE2, 0x2C, 0xE3, 0xFF, 0xD2, 0xF0, 0x03, 0xB5, 0xCF,
            0x06, 0xC1, 0x06, 0x09, 0xBE, 0x3F, 0x0C, 0x05, 0x30, 0xF8, 0x3B, 0x1F, 0xF8,
            0x40, 0x5F, 0xF0, 0x88, 0x9F, 0xF0, 0x41, 0xFF, 0xF7, 0x7F, 0x7F, 0x00, 0xE4,
            0x00, 0x02, 0x7A, 0xFE, 0x3E, 0xA4, 0x5C, 0xD2, 0x77, 0x07, 0x81, 0xF3, 0xFF,
            0x1C, 0x00, 0xED, 0x03, 0x04, 0x1E, 0x33, 0xFA, 0x4E, 0xDE, 0x29, 0x22, 0xEE,
            0x05, 0xBF, 0x12, 0x02, 0x10, 0xF0, 0xFC, 0x53, 0x5F, 0x2C, 0x2B, 0x4D, 0xE0,
            0xDB, 0x05, 0xE4, 0xBE, 0x12, 0xC5, 0xAF, 0xF5, 0xC3, 0x02, 0x06, 0x90, 0x20,
            0xF3, 0xEF, 0x47, 0xA3, 0x1B, 0x44, 0x1F, 0x1D, 0x0D, 0xEF, 0x1E, 0x61, 0x06,
            0x28, 0xFA, 0x80, 0x1B, 0x40, 0x01, 0xFC, 0xFD, 0xEF, 0x07, 0xFF, 0x00, 0x00,
            0x7E, 0xF0, 0xFF, 0xC1, 0x3F, 0xF8, 0xC2, 0x4E, 0xFC, 0xFF, 0x0E, 0x14, 0xC1,
            0x00, 0x10, 0x7C, 0x9F, 0x0F, 0x43, 0xE0, 0xFF, 0x84, 0xF0, 0xFB, 0xBF, 0x6F,
            0xF4, 0x85, 0x1E, 0xEC, 0xC0, 0x20, 0xF8, 0x3F, 0x81, 0x08, 0xBC, 0xDE, 0xFF,
            0x7E, 0x00, 0x14, 0xFF, 0xA0, 0x0F, 0x44, 0x21, 0xF8, 0xFF, 0xFF, 0x07, 0x3C,
            0xE0, 0x0B, 0x3D, 0xE0, 0xFF, 0xFF, 0xE0, 0x13, 0x3F, 0xA0, 0xEF, 0x7F, 0x41,
            0x1C, 0x7F, 0x0F, 0x0C, 0xC2, 0x0D, 0x10, 0x8B, 0xFE, 0xF3, 0xBF, 0x1F, 0x2C,
            0x04, 0x28, 0x32, 0x2C, 0xAD, 0x1B, 0x33, 0x0D, 0x1D, 0x5F, 0x10, 0x0D, 0x00,
            0xD0, 0x10, 0x21, 0x5E, 0x50, 0x00, 0xFE, 0x2E, 0x0C, 0x30, 0xDE, 0x21, 0xCE,
            0x32, 0xB5, 0xCC, 0xE1, 0x30, 0x03, 0x40, 0xF2, 0x00, 0xAC, 0x40, 0x26, 0xC1,
            0xDD, 0xE0, 0x13, 0xE5, 0x0E, 0x44, 0xBC, 0x5C, 0x5F, 0x1B, 0x21, 0xD2, 0xF0,
            0xFF, 0xF2, 0xF3, 0x00, 0xEF, 0x4F, 0xB1, 0x40, 0xD5, 0xDA, 0x06, 0x04, 0x7F,
            0x21, 0x0C, 0x03, 0xD0, 0xF7, 0xBE, 0xDF, 0xFF, 0xE4, 0x00, 0x02, 0x4E, 0xA9,
            0x5A, 0x1C, 0x5D, 0xD2, 0x77, 0x07, 0x81, 0xF2, 0xFF, 0x21, 0x00, 0xE7, 0x03,
            0x06, 0x0F, 0xC2, 0x0D, 0x00, 0x42, 0xFF, 0x13, 0x43, 0xB0, 0x07, 0x00, 0xE0,
            0x17, 0xC2, 0xC0, 0xFB, 0x81, 0x0F, 0xF8, 0x03, 0xF1, 0xF3, 0xBD, 0x20, 0x08,
            0xBD, 0xE0, 0x0F, 0xFF, 0x90, 0xF7, 0x3D, 0x41, 0x08, 0x00, 0x04, 0x0A, 0xE0,
            0xF6, 0xE0, 0x50, 0xCF, 0xFD, 0xC2, 0xEC, 0x33, 0x46, 0xE1, 0xDE, 0x0F, 0xD3,
            0xDE, 0x06, 0x0A, 0x02, 0x30, 0x0C, 0xC3, 0xFF, 0xF7, 0x00, 0x10, 0x10, 0x80,
            0xA0, 0x07, 0x3E, 0xE1, 0x0B, 0x3E, 0xD0, 0xF3, 0x04, 0x81, 0xFC, 0x00, 0x0E,
            0x04, 0x14, 0xAC, 0x17, 0xDF, 0x11, 0x44, 0x2E, 0x6E, 0xD9, 0x22, 0xF2, 0xC0,
            0xDE, 0x11, 0xE1, 0x02, 0xD3, 0x12, 0x3D, 0x1F, 0x0D, 0xE3, 0x2F, 0x24, 0xFB,
            0x00, 0x0F, 0x34, 0xFF, 0x2D, 0x0C, 0x06, 0x14, 0xBE, 0x10, 0x08, 0x02, 0xD0,
            0xEB, 0xFD, 0x50, 0xFC, 0xBD, 0xDF, 0x0B, 0x48, 0xC1, 0xE7, 0x00, 0x30, 0x04,
            0x45, 0xF0, 0xF7, 0xBC, 0x1F, 0xF8, 0x03, 0x20, 0xF8, 0x42, 0x10, 0xFC, 0x3F,
            0x00, 0x10, 0x3C, 0xB0, 0x0F, 0x40, 0x00, 0x04, 0x3F, 0x00, 0x00, 0x41, 0x0F,
            0xE8, 0x04, 0x14, 0xF3, 0xF2, 0x52, 0xD2, 0xFC, 0x3F, 0x6B, 0x50, 0x0D, 0x01,
            0xB4, 0xC4, 0xF4, 0xFF, 0xF1, 0xF1, 0x10, 0x3C, 0x6D, 0x00, 0xCD, 0x21, 0x11,
            0x4D, 0x00, 0x3F, 0x21, 0xFD, 0xF0, 0xE2, 0x06, 0x09, 0x7F, 0x60, 0xFC, 0x3A,
            0x3F, 0x10, 0x3F, 0xF0, 0xFB, 0xBE, 0x4F, 0xF8, 0x04, 0x4F, 0xF8, 0x01, 0x10,
            0x0C, 0xBD, 0x8F, 0x03, 0xE4, 0x00, 0x02, 0xB2, 0x58, 0x8A, 0x55, 0x5D, 0xD2,
            0x77, 0x07, 0x81, 0xF3, 0xFF, 0x1D, 0x00, 0xE8, 0x03, 0x0C, 0x0A, 0x03, 0xC0,
            0xFF, 0xFE, 0x1F, 0x00, 0x03, 0x20, 0x00, 0x89, 0x7F, 0x11, 0x64, 0xA1, 0xF8,
            0xD2, 0x80, 0xA0, 0x9B, 0xA3, 0xD3, 0x7F, 0x46, 0xCF, 0x38, 0x41, 0xE2, 0x11,
            0xA0, 0xF6, 0x2C, 0x40, 0x04, 0xEA, 0x04, 0x07, 0x9C, 0x4F, 0xBD, 0x68, 0xBF,
            0x00, 0xBB, 0xAF, 0xFB, 0x0A, 0x14, 0xF0, 0x93, 0x20, 0xBF, 0x11, 0x3C, 0x37,
            0x33, 0x75, 0x08, 0xAE, 0x63, 0x41, 0x01, 0x1E, 0x91, 0x1F, 0xD1, 0x2F, 0x13,
            0x39, 0x48, 0xCF, 0x80, 0xD2, 0x83, 0xA4, 0x2F, 0x3D, 0x15, 0xA1, 0x03, 0x7F,
            0x7E, 0x09, 0xF6, 0x4F, 0xDF, 0x55, 0xDF, 0xF5, 0xA3, 0x92, 0xCD, 0xFA, 0x5A,
            0x08, 0xDC, 0xF6, 0xB3, 0xBF, 0xC0, 0x71, 0x87, 0x0C, 0xCC, 0x5F, 0x11, 0x86,
            0x09, 0x98, 0x08, 0x12, 0x48, 0xFB, 0x0F, 0xD8, 0x1E, 0x76, 0xF3, 0xE6, 0x47,
            0xBF, 0xBB, 0xD4, 0x0C, 0x13, 0x87, 0x70, 0x04, 0xD3, 0xAF, 0x05, 0xB9, 0xBF,
            0x02, 0x0A, 0x90, 0xF5, 0xE4, 0x6F, 0xD8, 0x57, 0x2F, 0xFC, 0x01, 0x73, 0x06,
            0xC0, 0x1F, 0x05, 0x4F, 0xE0, 0xE8, 0xD6, 0xF0, 0xFE, 0xEC, 0xDF, 0xF2, 0x76,
            0x4F, 0x03, 0x2B, 0x60, 0xFB, 0x63, 0x2F, 0x0E, 0x0B, 0x80, 0xE8, 0x2E, 0xFF,
            0x09, 0xA8, 0x40, 0x09, 0xD5, 0x4F, 0xFB, 0x32, 0x80, 0xF9, 0x08, 0xA0, 0xFC,
            0xB6, 0x2F, 0xF2, 0xFF, 0xEF, 0xF7, 0x83, 0x90, 0xF8, 0xAB, 0x90, 0xFB, 0x97,
            0x90, 0xF0, 0xC9, 0xBF, 0xF5, 0x59, 0x91, 0xF8, 0x59, 0xDF, 0x0E, 0x68, 0x0E,
            0xE5, 0x00, 0x02, 0x9A, 0x82, 0x72, 0x94, 0x5D, 0xD2, 0x77, 0x07, 0x81, 0x5A,
            0x01, 0xE1, 0xFE, 0x10, 0xFD, 0x0A, 0x0A, 0xD8, 0x9B, 0x31, 0x78, 0xFD, 0x0D,
            0xAC, 0x3D, 0x40, 0xFF, 0x45, 0x9C, 0x9D, 0xD1, 0xBD, 0xD5, 0xA7, 0xB0, 0x8B,
            0x9D, 0x6C, 0x97, 0x89, 0x3B, 0x76, 0x97, 0xD1, 0x50, 0xB0, 0xFB, 0x06, 0x20,
            0x71, 0xC7, 0x07, 0xE9, 0xDB, 0x00, 0x10, 0x0A, 0x8A, 0xFF, 0x8B, 0xFE, 0x86,
            0x02, 0x37, 0x01, 0x19, 0x01, 0xE8, 0x00, 0x7A, 0xFD, 0x1B, 0x01, 0x97, 0xF7,
            0x32, 0x05, 0x30, 0x00, 0xF4, 0xFF, 0x39, 0xFD, 0xCB, 0xFD, 0x64, 0x04, 0xEF,
            0xFF, 0x1A, 0xFF, 0x66, 0x00, 0x77, 0x00, 0x2D, 0x02, 0x7C, 0xFF, 0xD6, 0xFF,
            0x44, 0xFF, 0x36, 0x00, 0xE8, 0xFF, 0xA6, 0xFF, 0x50, 0x00, 0xCB, 0xFF, 0x2B,
            0x00, 0x95, 0xFF, 0x0A, 0x14, 0x69, 0x10, 0x6F, 0xD3, 0xE1, 0x02, 0x54, 0x3A,
            0x82, 0x0D, 0x29, 0x38, 0xC1, 0x7E, 0x07, 0xFA, 0x93, 0x80, 0x84, 0xF8, 0xE3,
            0xE7, 0x0E, 0xC0, 0x00, 0x0B, 0xFC, 0x5F, 0x00, 0x01, 0x03, 0xF8, 0x6F, 0x40,
            0x00, 0x04, 0xF4, 0xFF, 0xBF, 0xFE, 0x00, 0xFC, 0xEF, 0x7F, 0xFF, 0x05, 0x10,
            0xD0, 0x3F, 0xFF, 0xFE, 0x13, 0x20, 0x80, 0x00, 0xFF, 0xEF, 0xDF, 0xBF, 0x01,
            0x03, 0x0C, 0xA0, 0xBF, 0xFF, 0x01, 0x14, 0x80, 0x00, 0xFF, 0xFE, 0xDF, 0x2F,
            0x00, 0x00, 0x06, 0x0E, 0x41, 0x3F, 0x0C, 0xC3, 0x0E, 0x00, 0xC1, 0x6F, 0xF8,
            0xC2, 0xDD, 0xF3, 0x44, 0x51, 0xFC, 0x40, 0x50, 0xF8, 0x3C, 0x3F, 0x04, 0x42,
            0x0F, 0xF4, 0x8A, 0x10, 0xEC, 0x3F, 0xF0, 0xF7, 0x01, 0x0F, 0x58, 0x00, 0x02,
            0x30, 0x27, 0x2F, 0xB2, 0x5D, 0xD2, 0x77, 0x07, 0x81, 0xBF, 0xFF, 0x18, 0x00,
            0x09, 0xFC, 0x04, 0x05, 0x11, 0x1E, 0x3E, 0x40, 0x34, 0xDF, 0xF9, 0x0E, 0x08,
            0x14, 0x06, 0xFC, 0xFD, 0x00, 0x04, 0x05, 0xFD, 0x00, 0xFD, 0x01, 0x02, 0xEF,
            0x01, 0xFB, 0x20, 0x06, 0x02, 0xE5, 0xF4, 0x06, 0x12, 0x07, 0xFD, 0xFA, 0xFB,
            0xFF, 0xFF, 0x03, 0x04, 0x08, 0xFE, 0xFB, 0xF9, 0x03, 0x01, 0x01, 0x02, 0xFF,
            0x01, 0xFB, 0xFE, 0xFD, 0x04, 0xFD, 0x05, 0xFE, 0x07, 0xFD, 0xFF, 0xFD, 0xFD,
            0x04, 0x01, 0x06, 0xFD, 0x01, 0x01, 0xFE, 0xFC, 0x00
        ])
    }
    
    private class GyroOfflineMockData {
        private static let factor:Float = 0.07
        
        // index       type                                       data:
        // 60                                                     0x05
        // 61..68      time stamp                                 0xf2, 0x10, 0x3c, 0x9d, 0x1d, 0x52, 0x72, 0x07,
        static let expectedFirstSampleTimeStamp:UInt64 = 0x09ef3726208f6fd8
        
        // 69                                                     0x80,
        // 70..75      reference sample                           0x13, 0xec, 0xc0, 0x0f, 0x0b, 0xee,
        //      Sample 0 (aka. reference sample):
        //      channel 0: 13 EC => 0xEC13 => -5101
        static let rawSample0Channel0 = -5101
        static let sample0Channel0 = -5101 * factor
        
        //      channel 1: C0 0F => 0x0FC0 => 4032
        static let rawSample0Channel1 = 4032
        static let sample0Channel1 = 4032 * factor
        
        //      channel 2: 0B EE => 0xEE0B => 4597
        static let rawSample0Channel2 = -4597
        static let sample0Channel2 = -4597 * factor
        
        // 76:      Delta size                                             0x10 (16bits)
        // 77:      Sample amount                                          0x23 (Delta block contains 35 samples)
        // 78..79:      Sample 1 - channel 0, size 16 bits:                0x9d, 0xfc,
        static let sample1Channel0 = Float(rawSample0Channel0 - 867) * factor
        
        // 80..81:      Sample 1 - channel 1, size 16 bits:                0x0a, 0xf3,
        static let sample1Channel1 = Float(rawSample0Channel1 - 3318) * factor
        
        // 82..83:      Sample 1 - channel 2, size 16 bits:                0x14, 0x0e,
        static let sample1Channel2 = Float(rawSample0Channel2 + 3604) * factor
        
        static let expectedLastSampleTimeStamp:UInt64  = 0x0772521DC6F82904 //extracted from [gyroOfflineFrame]
        
        static let gyroOfflineFrame = Data([
            0x00,
            0x2b, 0x4c, 0x7c, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xed, 0xb7, 0x3b, 0x5e,
            
            0x32, 0x30, 0x31, 0x37, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x31,
            0x20, 0x31, 0x30, 0x3a, 0x32, 0x36, 0x3a, 0x33, 0x32, 0x00,
            
            0x15,
            0x00, 0x01, 0x34, 0x00,
            0x01, 0x01, 0x10, 0x00,
            0x02, 0x01, 0xD0, 0x07,
            0x04, 0x01, 0x03,
            0x05, 0x01, 0x29, 0x5C, 0x8F, 0x3D,
            0x00,
            0xe4, 0x00,
            0x05,
            0xf2, 0x10, 0x3c, 0x9d, 0x1d, 0x52, 0x72, 0x07,
            0x80, 0x13, 0xec, 0xc0, 0x0f,
            0x0b, 0xee, 0x10, 0x23, 0x9d, 0xfc, 0x0a, 0xf3, 0x14, 0x0e,
            0x4f, 0xfd, 0xee, 0xf9, 0x32, 0x06, 0xd4, 0xfb, 0x78, 0xf9,
            0xbc, 0x0b, 0xbb, 0xf7, 0x93, 0xf5, 0xea, 0x0c, 0xac, 0xf5,
            0x86, 0xf8, 0x55, 0x0a, 0x2f, 0xfa, 0x9d, 0xff, 0x13, 0x03,
            0x50, 0x08, 0x54, 0x07, 0xcb, 0xf1, 0x33, 0x1f, 0xf6, 0x0c,
            0xdd, 0xe2, 0xce, 0x13, 0x19, 0x05, 0x05, 0xf5, 0xe2, 0xf9,
            0x85, 0xfb, 0x9d, 0x0a, 0x5c, 0xf7, 0xb2, 0xfc, 0xc3, 0x0b,
            0xee, 0xff, 0x37, 0xfe, 0x3d, 0x06, 0xc9, 0x02, 0x0e, 0xff,
            0x0a, 0x03, 0x76, 0xf9, 0x11, 0xfc, 0x01, 0x09, 0x56, 0xf9,
            0x56, 0x0a, 0x0d, 0x00, 0x15, 0xf5, 0x79, 0x0a, 0xf0, 0xff,
            0x1b, 0x02, 0xec, 0x0a, 0x92, 0xe9, 0xb6, 0xf7, 0x85, 0x06,
            0x71, 0xf0, 0x3f, 0x05, 0xdc, 0xff, 0x8a, 0x04, 0x93, 0x01,
            0x72, 0xf0, 0x8c, 0x12, 0x1c, 0x0d, 0xaa, 0xfb, 0x5e, 0x09,
            0x68, 0x05, 0xf9, 0xfe, 0x14, 0xf9, 0x89, 0xfd, 0xd6, 0xfa,
            0x58, 0xf9, 0x4f, 0x01, 0x1c, 0xfe, 0xaf, 0xfa, 0xcc, 0xfd,
            0xbe, 0xff, 0x43, 0xfd, 0x67, 0xff, 0xaa, 0x01, 0xbb, 0xfb,
            0x09, 0x0a, 0x82, 0x03, 0xd2, 0x02, 0x70, 0x02, 0x93, 0x07,
            0x97, 0xfa, 0x8c, 0xf9, 0x4d, 0xfe, 0x23, 0xfc, 0x44, 0x02,
            0x10, 0xff, 0xee, 0x07, 0x3c, 0x0d, 0x36, 0x05, 0xc5, 0xff,
            0x5f, 0x06, 0xb7, 0x05, 0xfb, 0xfb, 0xed, 0xff, 0x71, 0x03,
            0x1c, 0xfe, 0x87, 0x04, 0x5e, 0xfc, 0xfb, 0xfb, 0xfb, 0xf5,
            0x4d, 0xf9, 0x7a, 0x05, 0xe4, 0x00, 0x05, 0x04, 0x29, 0xf8,
            0xc6, 0x1d, 0x52, 0x72, 0x07, 0x80, 0x36, 0xf7, 0x7a, 0xfd,
            0x1e, 0x04, 0x10, 0x23, 0x02, 0x04, 0x38, 0xff, 0x06, 0x01,
            0x00, 0x08, 0x5c, 0x04, 0x97, 0xff, 0xd6, 0xfd, 0xc7, 0x00,
            0xd1, 0xfd, 0x7f, 0x02, 0xc8, 0xfe, 0x1e, 0xfd, 0x61, 0x00,
            0x1e, 0x00, 0x59, 0x00, 0x4d, 0xfe, 0x4b, 0x00, 0xa1, 0x03,
            0x77, 0xf8, 0x14, 0xff, 0xbc, 0x05, 0xf4, 0xf7, 0xec, 0xfc,
            0xfe, 0x03, 0xf3, 0xf7, 0x0b, 0xf8, 0x44, 0x01, 0x52, 0xff,
            0x4e, 0xf7, 0x73, 0x0a, 0x10, 0xf9, 0xd0, 0xef, 0xe4, 0xf3,
            0xdb, 0x00, 0x8d, 0xfd, 0x4e, 0xf7, 0x5b, 0xff, 0xa2, 0x01,
            0xa7, 0xfa, 0x6b, 0xe8, 0xb4, 0x06, 0x76, 0xf4, 0x38, 0xeb,
            0x95, 0x06, 0x1c, 0xfb, 0x15, 0xfb, 0x85, 0x2b, 0x41, 0xfe,
            0xda, 0x36, 0xb1, 0x03, 0xff, 0xfc, 0x8d, 0x1a, 0xf5, 0xea,
            0xc1, 0xfd, 0x2d, 0x27, 0xb5, 0xf6, 0x7b, 0x01, 0x82, 0x00,
            0x98, 0xe4, 0x1e, 0x00, 0x4c, 0xc9, 0x0d, 0x09, 0x9d, 0x01,
            0x63, 0xf7, 0xb5, 0x22, 0x71, 0x03, 0xfc, 0x14, 0x69, 0x20,
            0x82, 0x02, 0xbe, 0x12, 0x52, 0xee, 0xc3, 0x00, 0x4f, 0xe9,
            0x2a, 0xe0, 0x2b, 0x01, 0xfb, 0xfc, 0x84, 0xea, 0x7f, 0x07,
            0x86, 0x11, 0xa9, 0x12, 0x4b, 0x04, 0x30, 0xe9, 0x3e, 0x16,
            0x4d, 0x03, 0x19, 0x08, 0xe2, 0xf5, 0xa5, 0x00, 0x56, 0x0e,
            0x85, 0xf6, 0xf6, 0xfe, 0xae, 0xf1, 0x5f, 0x0a, 0xab, 0xfd,
            0x21, 0x04, 0x64, 0xfe, 0x6e, 0xfe, 0x66, 0xff, 0x4f, 0xfa,
            0xe6, 0xff, 0xe2, 0xff, 0x30, 0x07, 0x6b, 0x00, 0x08, 0x00,
            0x45, 0xfd, 0x23, 0x00
        ])
    }
    
    
    private class  PpgOfflineMockData {
        // index       type                                       data:
        // 59                                                     0x80,
        // 60..71      reference sample                           0x5d, 0x3b, 0x00, 0x16, 0x5f, 0x00, 0x10, 0xb7, 0x00, 0x59, 0xe6, 0xfd,
        //      Sample 0 (aka. reference sample):
        //      channel 0: 5D 3B 00  => 0x003B5D => 15197
        static let sample0Channel0:Int32 = 15197
        
        //      channel 1: 16 5F 00 => 0x005F16 => 24342
        static let sample0Channel1:Int32 = 24342
        
        //      channel 2: 10 B7 00 => 0x00B710 => 46864
        static let sample0Channel2:Int32 = 46864
        
        //     ambient: 59 E6 FD => 0x00B710 => 46864
        static let sample0Ambient:Int32 = -137639
        
        static let ppgOfflineFrame = Data([
            0x00,
            0x2b, 0x4c, 0x7c, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xed, 0xb7, 0x3b, 0x5e,
            0x32, 0x30, 0x31, 0x37, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x31,
            0x20, 0x31, 0x30, 0x3a, 0x32, 0x36, 0x3a, 0x31, 0x36, 0x00,
            
            0x0B,
            0x00, 0x01, 0x87, 0x00,
            0x01, 0x01, 0x16, 0x00,
            0x04, 0x01, 0x04,
            0x00,
            0xe4, 0x00, 0x01, 0xdc, 0x02, 0x56,
            0xd2, 0x19, 0x52, 0x72, 0x07, 0x80, 0x5d, 0x3b, 0x00, 0x16,
            0x5f, 0x00, 0x10, 0xb7, 0x00, 0x59, 0xe6, 0xfd, 0x18, 0x11,
            0x5f, 0x21, 0x00, 0xe8, 0x3d, 0x00, 0x8f, 0x19, 0x00, 0xe3,
            0xeb, 0xff, 0x7f, 0xca, 0xff, 0x17, 0xc1, 0xff, 0xa4, 0xef,
            0xff, 0x6f, 0x31, 0x00, 0xf7, 0xbf, 0xff, 0x77, 0xc7, 0xff,
            0x04, 0xce, 0xff, 0x01, 0x08, 0x00, 0x93, 0x42, 0x00, 0x78,
            0x5f, 0x00, 0x7d, 0x20, 0x00, 0x1d, 0xcc, 0xff, 0xbf, 0xf5,
            0x05, 0xda, 0x8f, 0x06, 0x23, 0xf1, 0x05, 0x44, 0xe9, 0xff,
            0x69, 0xe9, 0x12, 0xd4, 0x28, 0x13, 0x2d, 0xa7, 0x10, 0x48,
            0xc2, 0xfe, 0x2c, 0xf6, 0x06, 0x67, 0xc1, 0x05, 0x05, 0xb8,
            0x08, 0xad, 0x9c, 0x00, 0x8e, 0x23, 0xf2, 0x0e, 0x56, 0xf1,
            0xbb, 0xa3, 0xf1, 0xd9, 0xd7, 0xff, 0xc8, 0x87, 0xf5, 0x7a,
            0x1d, 0xf5, 0x57, 0xbc, 0xf5, 0xee, 0x96, 0xff, 0x88, 0xd6,
            0xfa, 0xdd, 0x1a, 0xfb, 0x41, 0x30, 0xfb, 0x06, 0xc3, 0xff,
            0xf3, 0xf3, 0xfe, 0xd2, 0x22, 0xff, 0x24, 0x25, 0xff, 0x6c,
            0xbf, 0xff, 0x79, 0x0c, 0x02, 0x2b, 0x21, 0x02, 0xe7, 0x3d,
            0x02, 0x51, 0xc1, 0xff, 0xa8, 0x76, 0x00, 0xe8, 0xf3, 0xff,
            0xf1, 0x89, 0xff, 0xca, 0x2a, 0x00, 0xf3, 0xb6, 0xfd, 0x5b,
            0xa1, 0xfe, 0xbf, 0x93, 0xfe, 0x4b, 0x4b, 0x00, 0x41, 0x20,
            0xff, 0xa1, 0x6f, 0xff, 0x21, 0x5e, 0xff, 0xb9, 0x9f, 0x00,
            0x29, 0xdf, 0xff, 0x9b, 0xec, 0xff, 0x8b, 0xe3, 0xff, 0x74,
            0x56, 0x01, 0x35, 0x44, 0xfe, 0x3a, 0x4d, 0xfe, 0xf1, 0x50,
            0xfe, 0xf6, 0xed, 0xfe, 0xe0, 0x00, 0x01, 0x53, 0x2e, 0x38,
            0xe9, 0x19, 0x52, 0x72, 0x07, 0x80, 0x2d, 0xbc, 0xfe, 0x7a,
            0x35, 0xff, 0xcc, 0xda, 0xff, 0x39, 0xbf, 0xfc, 0x14, 0x14,
            0xbf, 0x86, 0x00, 0x08, 0x0a, 0x51, 0x9c, 0xc0, 0x7c, 0x00,
            0xb6, 0xf1, 0x4f, 0x2c, 0xfc, 0x5e, 0xc5, 0x9f, 0x79, 0x04,
            0x99, 0xc9, 0x20, 0x2c, 0x09, 0xdf, 0x93, 0x60, 0xb8, 0x12,
            0xeb, 0x9b, 0xe1, 0x43, 0x19, 0x70, 0x90, 0xf1, 0x07, 0x1e,
            0x1f, 0xf6, 0x00, 0x63, 0x0f, 0xa3, 0xf4, 0x60, 0x5d, 0x12,
            0x10, 0x2d, 0xde, 0xdd, 0xe2, 0x56, 0x2e, 0x4e, 0x53, 0xe4,
            0xc9, 0x94, 0x6f, 0xfd, 0xfc, 0x20, 0x75, 0x4f, 0x5e, 0xe9,
            0x36, 0xc0, 0x3e, 0x55, 0xed, 0xc9, 0xeb, 0x2e, 0xc5, 0xf2,
            0x27, 0xa9, 0x0f, 0xc9, 0xf6, 0x83, 0x9d, 0xaf, 0x7b, 0x00,
            0x10, 0x3d, 0x11, 0x7f, 0x12, 0x61, 0x37, 0x01, 0x29, 0x16,
            0x69, 0xd6, 0x8f, 0xb8, 0xfd, 0xde, 0xdc, 0x3f, 0x9c, 0xfe,
            0xd6, 0x0f, 0x9f, 0x80, 0xf0, 0xc8, 0x0b, 0xbf, 0x3c, 0xf1,
            0x52, 0xcd, 0x8f, 0xa2, 0xfc, 0xc6, 0xca, 0x9f, 0x00, 0xfd,
            0x9c, 0x55, 0x40, 0x4c, 0x05, 0x1e, 0x56, 0xb0, 0x75, 0x05,
            0xbd, 0x40, 0x40, 0x46, 0x04, 0xec, 0x42, 0x70, 0x15, 0x04,
            0x7b, 0xaa, 0x9f, 0x92, 0xfa, 0xf7, 0xaa, 0x3f, 0xa2, 0xfa,
            0x20, 0x7c, 0x4f, 0x98, 0xf7, 0x23, 0x79, 0x3f, 0xa5, 0xf7,
            0x97, 0xf1, 0x3f, 0x21, 0xff, 0x1f, 0xf2, 0x8f, 0x3b, 0xff,
            0x3a, 0x84, 0xa0, 0x35, 0x08, 0xba, 0x83, 0x70, 0x48, 0x08,
            0x28, 0x86, 0xe0, 0x77, 0x08, 0xa4, 0x87, 0xc0, 0x70, 0x08,
            0xe0, 0x00, 0x01, 0xbc, 0xd6, 0x19, 0x00, 0x1a, 0x52, 0x72,
            0x07, 0x80, 0x42, 0x2d, 0xff, 0xf0, 0x4d, 0xff, 0x43, 0xf0,
            0xff, 0xd4, 0x04, 0xfe, 0x14, 0x14, 0xdb, 0x7c, 0x8f, 0xae,
            0xf7, 0x49, 0x7c, 0x3f, 0xcd, 0xf7, 0x5f, 0xc6, 0x6f, 0x50,
            0xfc, 0xc3, 0xc4, 0x0f, 0x51, 0xfc, 0x8f, 0x63, 0x30, 0x52,
            0x06, 0x47, 0x66, 0x90, 0x51, 0x06, 0x3f, 0x11, 0x41, 0x30,
            0x11, 0x59, 0x12, 0xe1, 0x16, 0x11, 0x43, 0xdc, 0x6f, 0xcf,
            0xfd, 0x12, 0xdc, 0xcf, 0xcc, 0xfd, 0xc1, 0x4d, 0xdf, 0xcc,
            0xf4, 0x55, 0x4c, 0xcf, 0xcc, 0xf4, 0x1b, 0xa7, 0xaf, 0x39,
            0xfa, 0xd4, 0xa5, 0x8f, 0x4f, 0xfa, 0xae, 0x4a, 0x50, 0xc9,
            0x04, 0x96, 0x4c, 0x70, 0xc2, 0x04, 0xa2, 0xd3, 0xe1, 0x74,
            0x1d, 0x92, 0xd6, 0xc1, 0x44, 0x1d, 0xcb, 0xf7, 0x4f, 0x02,
            0x00, 0xcc, 0xfb, 0x6f, 0x80, 0xff, 0x3d, 0x51, 0x5f, 0x3f,
            0xf4, 0x97, 0x6d, 0x7f, 0xec, 0xf2, 0xa4, 0x78, 0xaf, 0x93,
            0xf7, 0x33, 0x5b, 0xef, 0xd9, 0xf7, 0x7c, 0x8d, 0x3f, 0xea,
            0xf8, 0xf4, 0x89, 0x6f, 0x4b, 0xf9, 0x27, 0xa1, 0x80, 0x29,
            0x0a, 0x37, 0x9d, 0x30, 0x6b, 0x0a, 0xe3, 0x8e, 0x3f, 0x1a,
            0xf9, 0x1e, 0x91, 0x2f, 0x39, 0xf9, 0x62, 0xef, 0x8f, 0x97,
            0xfe, 0x79, 0xea, 0xbf, 0xe6, 0xfe, 0x05, 0x72, 0x80, 0x7a,
            0x07, 0x76, 0x75, 0xb0, 0x57, 0x07, 0x42, 0x66, 0xdf, 0x40,
            0xf6, 0x13, 0x65, 0xff, 0x59, 0xf6, 0x77, 0x4a, 0xd0, 0x89,
            0x04, 0xa8, 0x48, 0x80, 0x9a, 0x04, 0xa5, 0xf0, 0x7f, 0x67,
            0xff, 0xa1, 0xf6, 0x7f, 0x44, 0xff, 0xe0, 0x00, 0x01, 0x7f,
            0x6d, 0xfc, 0x16, 0x1a, 0x52, 0x72, 0x07, 0x80, 0xd8, 0xdc,
            0xfe, 0x4a, 0xfd, 0xfe, 0xf9, 0x9d, 0xff, 0xb8, 0xaa, 0xfd,
            0x14, 0x14, 0x46, 0x9e, 0x20, 0xdc, 0x09, 0x59, 0x9e, 0x60,
            0xdf, 0x09, 0x96, 0xbb, 0xff, 0xec, 0xfb, 0x25, 0xbd, 0x8f,
            0xc8, 0xfb, 0x53, 0xdc, 0xdf, 0x59, 0xfd, 0xec, 0xd8, 0x3f,
            0x99, 0xfd, 0x8a, 0x88, 0xf0, 0xd6, 0x08, 0xb4, 0x8b, 0x70,
            0xa1, 0x08, 0x92, 0x74, 0x4f, 0x59, 0xf7, 0x4e, 0x75, 0xdf,
            0x37, 0xf7, 0xdf, 0x31, 0xc0, 0xe1, 0x02, 0xd8, 0x2d, 0x20,
            0xec, 0x02, 0x0c, 0x3c, 0xc0, 0x24, 0x04, 0x70, 0x42, 0xc0,
            0xcd, 0x03, 0xdd, 0x51, 0x2f, 0xce, 0xf4, 0x6b, 0x4d, 0x4f,
            0x9b, 0xf4, 0x75, 0x3c, 0x60, 0x9b, 0x03, 0x3c, 0x3a, 0x20,
            0x97, 0x03, 0xb2, 0xae, 0xdf, 0xf5, 0xfa, 0xe1, 0xb6, 0xdf,
            0x40, 0xfa, 0x36, 0x6a, 0xa0, 0x64, 0x08, 0xde, 0x1c, 0x60,
            0xef, 0xf9, 0xa8, 0xb7, 0xc2, 0xee, 0x29, 0x0f, 0xde, 0xc2,
            0xb2, 0x33, 0xba, 0x4f, 0xb2, 0x6e, 0x25, 0x71, 0x6a, 0x42,
            0xf9, 0x28, 0x29, 0x56, 0x7d, 0xe2, 0xd5, 0x80, 0x62, 0xad,
            0x4f, 0xd7, 0xe5, 0xab, 0x2d, 0xac, 0xd9, 0x9e, 0x96, 0x6d,
            0x94, 0xd9, 0xc3, 0xd3, 0xbf, 0x43, 0xfb, 0x84, 0xbb, 0x4f,
            0x5e, 0xf4, 0x34, 0xcc, 0xaf, 0xe8, 0xfe, 0x70, 0xff, 0x7f,
            0xa7, 0xf8, 0x86, 0x85, 0xdf, 0x1a, 0xf8, 0x0e, 0x76, 0x3f,
            0x98, 0xfb, 0x4e, 0x15, 0x91, 0x9a, 0x0f, 0x5a, 0x24, 0xc1,
            0x89, 0x13, 0xa5, 0xa6, 0x31, 0xe3, 0x1c, 0x23, 0xb3, 0xe1,
            0x90, 0x1e, 0xe0, 0x00, 0x01, 0x5b, 0x82, 0xf5, 0x2e, 0x1a,
            0x52, 0x72, 0x07, 0x80, 0x38, 0xcc, 0x01, 0xba, 0xf1, 0x01,
            0x46, 0x97, 0x02, 0x11, 0x7d, 0x00, 0x14, 0x12, 0x4a, 0xae,
            0x2f, 0x2d, 0xfa, 0x9a, 0x9f, 0x6f, 0x51, 0xfa, 0x76, 0x7a,
            0x6f, 0x45, 0xf6, 0x3f, 0x75, 0x4f, 0x7c, 0xf6, 0xf7, 0x9a,
            0xaf, 0xf3, 0xf7, 0xaa, 0xa5, 0xbf, 0xb1, 0xf7, 0xfe, 0xde,
            0x6f, 0xdc, 0xfe, 0xf6, 0x04, 0x00, 0x68, 0xfe, 0x30, 0xfa,
            0xaf, 0x0c, 0x01, 0x13, 0xf9, 0x1f, 0xc3, 0x01, 0x44, 0x3f,
            0x10, 0x24, 0x04, 0xc6, 0x27, 0x40, 0x84, 0x04, 0x91, 0xfb,
            0x0f, 0xac, 0xff, 0xff, 0xf0, 0x6f, 0xd1, 0xfe, 0x43, 0xb9,
            0x0f, 0x90, 0xfb, 0x5f, 0xb5, 0x8f, 0xf5, 0xfa, 0xb5, 0xee,
            0xff, 0xed, 0xfe, 0xf5, 0xec, 0x4f, 0x50, 0xff, 0x6c, 0x1a,
            0xa0, 0x03, 0x02, 0xea, 0x1e, 0x80, 0xa3, 0x02, 0x3d, 0x0e,
            0xb0, 0x35, 0x01, 0xc6, 0x14, 0x30, 0x44, 0x01, 0xf2, 0x24,
            0x00, 0x34, 0x02, 0x1b, 0x21, 0x40, 0x61, 0x02, 0x9c, 0x24,
            0x00, 0x37, 0x02, 0x18, 0x20, 0x40, 0x7e, 0x02, 0xa8, 0x0f,
            0x40, 0xe8, 0x00, 0x36, 0x10, 0x30, 0xfe, 0x00, 0x0b, 0x0c,
            0x00, 0xc0, 0x00, 0x7c, 0x0c, 0x00, 0xc0, 0x00, 0x12, 0x09,
            0x10, 0x8b, 0x00, 0xab, 0x08, 0x00, 0x86, 0x00, 0xae, 0x03,
            0xf0, 0x45, 0x00, 0x0f, 0x04, 0x30, 0x41, 0x00, 0x9b, 0x01,
            0x30, 0x1d, 0x00, 0x27, 0x02, 0x30, 0x1c, 0x00, 0x0c, 0x03,
            0xa8, 0x82, 0x24, 0x7c, 0x82, 0x25, 0x6c, 0x3d, 0xc9, 0xab,
            0xcc, 0xca, 0x3c, 0x6a, 0xaf, 0xf4, 0x5a, 0xaa, 0xe4, 0x00,
            0x01, 0x3a, 0x0c, 0x19, 0x55, 0x1a, 0x52, 0x72, 0x07, 0x80,
            0xe5, 0xdf, 0x00, 0x2b, 0xf6, 0x00, 0x5e, 0xa2, 0x01, 0x08,
            0x8f, 0xff, 0x0c, 0x22, 0x6e, 0x91, 0x25, 0x6e, 0x02, 0x1a,
            0xf0, 0xe4, 0x48, 0x9e, 0x24, 0x43, 0x91, 0x01, 0x0f, 0x1a,
            0x71, 0x16, 0x02, 0x3d, 0xcf, 0x6d, 0xdd, 0xd1, 0x2e, 0x5f,
            0xfd, 0x34, 0xaf, 0xf8, 0x11, 0x1e, 0xe9, 0x75, 0x9e, 0xe0,
            0x5b, 0xc3, 0x3a, 0x79, 0xf3, 0x3c, 0xfe, 0xa2, 0x29, 0xcb,
            0xf2, 0x2e, 0x4b, 0x7f, 0xeb, 0xf7, 0x5e, 0xf2, 0x43, 0x7b,
            0xb8, 0x33, 0x7b, 0xb5, 0x03, 0x0e, 0xce, 0x9b, 0xad, 0xd7,
            0x0c, 0xde, 0xf5, 0xb1, 0x3e, 0xe5, 0xb0, 0x33, 0x39, 0x02,
            0x14, 0x3c, 0xa0, 0x62, 0x28, 0x5d, 0x02, 0x24, 0xa0, 0xce,
            0xe3, 0x82, 0xde, 0xec, 0x70, 0x8e, 0xeb, 0x73, 0xae, 0xe7,
            0xa9, 0x1e, 0xe1, 0x43, 0x4e, 0xe9, 0xe7, 0x4f, 0x0f, 0xa1,
            0x90, 0x0b, 0xf7, 0x63, 0x3f, 0x09, 0x24, 0x3c, 0x92, 0xb1,
            0x07, 0x7c, 0xb0, 0x0a, 0xb4, 0xcc, 0xcb, 0x60, 0xed, 0xd1,
            0xd9, 0xed, 0xe4, 0x98, 0xdd, 0xdf, 0x0f, 0x2e, 0xdd, 0x4f,
            0x9e, 0xe0, 0xe0, 0xa2, 0x39, 0x1f, 0x43, 0x2f, 0xba, 0x73,
            0x3c, 0xdb, 0x73, 0x3f, 0x83, 0xa0, 0xfa, 0xc1, 0xaf, 0x01,
            0x88, 0x9b, 0xc0, 0xc2, 0x5b, 0xbc, 0x4b, 0xde, 0xe0, 0x4a,
            0xde, 0xe6, 0xe5, 0x0e, 0xeb, 0xae, 0xde, 0xe8, 0xee, 0x52,
            0x3d, 0xa9, 0x63, 0x31, 0x48, 0xd1, 0x10, 0x31, 0x91, 0x12,
            0x82, 0xad, 0xc9, 0xdc, 0x6c, 0xda, 0xf2, 0x4b, 0xc1, 0x78,
            0x6c, 0xba, 0x29, 0x7d, 0xd6, 0x03, 0x5d, 0xd4
        ])
    }
    
    private class PpiOfflineMockData {
        // index       type                                       data:
        // 48                                                     0x00,
        // 49        HR                                           0x00
        static let expectedHeartRate = 0
        
        // 50..51    PP interval in ms                            0x61, 0x02,
        static let expectedIntervalInMs:UInt16 = 609
        
        // 52..53    PP Error Estimate                            0x1e, 0x00
        static let expectedErrorEstimate:UInt16 = 30
        
        // 54       PP flags                                      0x07
        static let ppFlags = 0x07
        static let expectedBlockerBit =  0x01
        static let expectedSkinContactStatus = 0x01
        static let expectedSkinContactSupported = 0x01
        
        // 55        HR                                            0x40 (64)
        static let expectedHeartRate2 = 64
        
        // 56..57     PP                                           0xac, 0x01, (428)
        static let expectedIntervalInMs2:UInt16 = 428
        
        // 58..59     PP Error Estimate                            0xff, 0x00
        static let expectedErrorEstimate2:UInt16 = 255
        
        // 60        PP flags                                      0x00
        static let ppFlags2 = 0x00
        static let expectedBlockerBit2 =  0x00
        static let expectedSkinContactStatus2 = 0x00
        static let expectedSkinContactSupported2 =  0x00
        
        static let ppiOfflineFrame = Data([
            0x00,
            0x2b, 0x4c, 0x7c, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xed, 0xb7, 0x3b, 0x5e,
            0x32, 0x30, 0x31, 0x37, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x33,
            0x20, 0x31, 0x34, 0x3a, 0x30, 0x36, 0x3a, 0x31, 0x32, 0x00,
            
            0x00,
            0x00,
            0x28, 0x00, 0x03, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x02, 0x1e,
            0x00, 0x07, 0x40, 0xac, 0x01, 0xff, 0x00, 0x00, 0x00, 0xd7,
            0x04, 0x1e, 0x00, 0x07, 0x00, 0x4b, 0x05, 0x1e, 0x00, 0x07,
            0x00, 0xbe, 0x07, 0x1e, 0x00, 0x07, 0x16, 0x00, 0x03, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e,
            0x04, 0x1e, 0x00, 0x06, 0x00, 0x8b, 0x04, 0x1e, 0x00, 0x06,
            0x22, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x04, 0x19, 0x00, 0x06, 0x00, 0xcb,
            0x04, 0x15, 0x00, 0x07, 0x00, 0x5e, 0x04, 0x17, 0x00, 0x06,
            0x00, 0x95, 0x04, 0x14, 0x00, 0x06
        ])
    }
    
    private class MagOfflineMockData {
        private static let factor:Float = 0.0015
        
        // 69                                                     0x80,
        // 70..75      reference sample                           0x63, 0xfe, 0xbb, 0xff, 0x4d, 0xfa,
        //      Sample 0 (aka. reference sample):
        //      channel 0: 63 fe => 0xFE63 => -413
        static let rawSample0Channel0 = -413
        static let sample0Channel0 = -413 * factor
        
        //      channel 1: bb ff => 0xFFBB => -69
        static let rawSample0Channel1 = -69
        static let sample0Channel1 = -69 * factor
        
        //      channel 2: 4d fa => 0xFA4D => -1459
        static let rawSample0Channel2 = -1459
        static let sample0Channel2 = -1459 * factor
        
        // 76:      Delta size                                         0x06 (6bits)
        // 77:      Sample amount                                      0x27 (Delta block contains 39 samples)
        // 78:      Sample 1 - channel 0, size 6 bits: 00 001110       0x0e
        static let sample1Channel0 = Float(rawSample0Channel0 + 14) * factor
        
        // 79:      Sample 1 - channel 1, size 8 bits: 0101 1111       0x5f,
        static let sample1Channel1 = Float(rawSample0Channel1 - 4) * factor
        
        // 80:      Sample 1 - channel 2, size 8 bits: 111111 00       0xfc,
        static let sample1Channel2 = Float(rawSample0Channel2 + 5) * factor
        
        static let expectedLastSampleTimeStamp:UInt64 = 0x09fbe2b73f7c2a46 //extracted from [magOfflineFrame]
        
        static let magOfflineFrame = Data([
            0x00,
            0x2b, 0x4c, 0x7c, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x54, 0x9f, 0x5d, 0x67,
            
            0x32, 0x30, 0x32, 0x32, 0x2d, 0x31, 0x30, 0x2d, 0x31, 0x38,
            0x20, 0x31, 0x31, 0x3a, 0x31, 0x37, 0x3a, 0x32, 0x30, 0x00,
            
            0x15,
            0x00, 0x01, 0x64, 0x00,
            0x01, 0x01, 0x10, 0x00,
            0x02, 0x01, 0x32, 0x00,
            0x04, 0x01, 0x03,
            0x05, 0x01, 0xA6, 0x9B, 0xC4, 0x3A,
            0x00,
            0xdf, 0x00,
            
            0x06,
            0x96, 0x18, 0x9f, 0x00, 0xb7, 0xe2, 0xfb, 0x09,
            0x80,
            0x63, 0xfe, 0xbb, 0xff,
            0x4d, 0xfa, 0x06, 0x27, 0x0e, 0x5f, 0xfc, 0x7c, 0x70, 0x17,
            0x3a, 0x3f, 0x14, 0x39, 0xd0, 0xfb, 0xc4, 0x6f, 0xe0, 0x82,
            0xc1, 0xff, 0xbb, 0x13, 0xfc, 0x84, 0x5f, 0xd8, 0xc1, 0xaf,
            0xfb, 0x8c, 0x22, 0xf0, 0xc4, 0x1f, 0xe3, 0xc1, 0xdf, 0xfb,
            0xc1, 0x0f, 0x1c, 0x01, 0x22, 0x00, 0xc0, 0x2e, 0xec, 0xff,
            0xdf, 0xff, 0x7f, 0xdf, 0x0b, 0x01, 0x00, 0x10, 0xc0, 0x0f,
            0x0c, 0xbe, 0x6f, 0x08, 0xbc, 0xef, 0xff, 0xb8, 0x1f, 0xfc,
            0x84, 0x10, 0xf8, 0x81, 0xf0, 0x03, 0x81, 0xd0, 0xfb, 0x41,
            0xf0, 0x03, 0x02, 0x12, 0x04, 0x01, 0xf0, 0xeb, 0x7d, 0xff,
            0x0b, 0x01, 0x03, 0x08, 0x98, 0x04, 0xe8, 0x7a, 0xe3, 0xd8,
            0xc1, 0x2e, 0xcf, 0x06, 0x10, 0xfd, 0xef, 0x0b, 0xfe, 0x20,
            0x0c, 0xbf, 0xf0, 0x13, 0xc0, 0x1e, 0x0c, 0x00, 0xfe, 0x13,
            0xc2, 0xbe, 0x00, 0x01, 0x4f, 0xfc, 0xb8, 0x30, 0x08, 0x3e,
            0x00, 0x00, 0x3d, 0xf0, 0x0b, 0xfc, 0x3f, 0x08, 0x84, 0x0f,
            0xfc, 0x04, 0x08, 0xec, 0xec, 0xe1, 0x15, 0x22, 0x40, 0xbe,
            0x4d, 0x0e, 0x6c, 0xcd, 0xe1, 0x06, 0x08, 0xc2, 0x3f, 0x04,
            0xc1, 0x00, 0xf8, 0x40, 0x10, 0xf4, 0x0b, 0xc3, 0x03, 0xc0,
            0x60, 0xdb, 0x45, 0x1f, 0x04, 0x04, 0x08, 0xfe, 0x10, 0x0d,
            0x13, 0x30, 0x10, 0xc2, 0xd2, 0xd0, 0xfe, 0x40, 0x30, 0x06,
            0x08, 0x85, 0x2f, 0xf0, 0x40, 0x7f, 0x17, 0x79, 0xe0, 0xfb,
            0x86, 0x8f, 0x08, 0x40, 0x71, 0xf4, 0x3b, 0x4f, 0xec, 0xe4,
            0x00, 0x06, 0x46, 0x2a, 0x7c, 0x3f, 0xb7, 0xe2, 0xfb, 0x09,
            0x80, 0x60, 0xfe, 0xb8, 0xff, 0x53, 0xfa, 0x04, 0x07, 0xd4,
            0x52, 0xdb, 0xfe, 0xce, 0xd6, 0x21, 0x25, 0x4e, 0x03, 0x0c,
            0x06, 0x18, 0xc5, 0xde, 0xf7, 0xc3, 0x8f, 0x17, 0x47, 0xf1,
            0xfb, 0xc6, 0xff, 0xfb, 0xc2, 0x5f, 0xff, 0xbc, 0xee, 0xf3,
            0x88, 0x40, 0x18, 0x7f, 0x61, 0xdc, 0x44, 0x5e, 0xec, 0x39,
            0xd1, 0x13, 0x7a, 0x41, 0x08, 0x83, 0x3f, 0xe8, 0xf7, 0x80,
            0xfb, 0x89, 0xff, 0x0b, 0x04, 0xc0, 0x07, 0x04, 0x2f, 0x00,
            0xbf, 0xe0, 0xff, 0x3b, 0x10, 0x00, 0x04, 0x10, 0x31, 0xef,
            0x1b, 0xde, 0x33, 0xe6, 0x23, 0xc2, 0xec, 0x03, 0xfe, 0xef,
            0xfa, 0x1f, 0x40, 0x03, 0x62, 0xc4, 0x20, 0xb0, 0x0c, 0xef,
            0xf2, 0x32, 0x06, 0x10, 0xbf, 0xe0, 0x03, 0x3f, 0x20, 0xf4,
            0x02, 0x30, 0x00, 0x42, 0xff, 0x0f, 0x7e, 0xb0, 0x0f, 0xbd,
            0xd2, 0xfb, 0x07, 0x50, 0xdc, 0x82, 0xc1, 0x07, 0xbe, 0x20,
            0xe8, 0xbb, 0xf0, 0xef, 0x81, 0x20, 0xec, 0x02, 0x01, 0xf8,
            0x04, 0x18, 0x42, 0xdc, 0x0e, 0x02, 0xe1, 0x6f, 0xee, 0x20,
            0xb1, 0x40, 0x30, 0x10, 0xa4, 0xc4, 0x11, 0x49, 0x3e, 0x0d,
            0xf7, 0x31, 0x03, 0x00, 0x1e, 0x4f, 0xec, 0xcf, 0xce, 0x1d,
            0xe1, 0xe2, 0x10, 0x20, 0x1e, 0xf1, 0x2e, 0xfe, 0x06, 0x11,
            0xfe, 0x40, 0x00, 0xc5, 0x30, 0xf4, 0xbc, 0xd0, 0xfb, 0xbd,
            0x20, 0xf8, 0xc3, 0x00, 0xfc, 0xfd, 0xa0, 0x00, 0x40, 0xf0,
            0xff, 0xb5, 0xe0, 0xff, 0x7e, 0xff, 0xff, 0x80, 0x00, 0x00,
            0x05, 0x20, 0xf4, 0x44, 0xc0, 0x03, 0xbc, 0x00, 0x00
        ])
    }
    
    private class HrOfflineMockData {
        static let expectedSize = 9 // calculated from hrOfflineFrame
        
        // index
        // 39                                                      0x00,
        static let hrSample0: UInt8 = 0
        
        // 40                                                      0xFF,
        static let hrSample1: UInt8 = 255
        
        // 41                                                      0x32,
        static let hrSample2: UInt8 = 50
        
        // last index                                              0x55,
        static let hrSampleLast: UInt8 = 85
        
        static let hrOfflineFrame = Data([
            0x00,
            // header
            0x2b, 0x4c, 0x7c, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x08, 0xfb, 0xce, 0x14,
            
            // start time
            0x32, 0x30, 0x32, 0x32, 0x2d, 0x31, 0x32, 0x2d, 0x30, 0x37,
            0x20, 0x30, 0x37, 0x3a, 0x30, 0x34, 0x3a, 0x32, 0x38, 0x00,
            
            // settings
            0x00,
            
            // security strategy
            0x00,
            
            // packet size 19 bytes
            0x13, 0x00,
            
            // THE DATA
            // measurement type
            0x0e, //Offline hr
            // time stamp
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            // data raw, type 0
            0x00,
            0x00, 0xFF, 0x32, 0x32, 0x33, 0x33, 0x34, 0x35, 0x55
        ])
    }
    
    private class MockEncryptedOfflineRecordingDataAcc {
        let security:PmdSecret
        
        init() throws {
            security = try PmdSecret(strategy: PmdSecret.SecurityStrategy.aes128, key: Data([0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F]))
        }
        
        static let securedOfflineData = Data([
            0x02, 0xaa, 0xc7, 0x79, 0x8f, 0x77, 0x19, 0xce, 0xa5, 0x60,
            0x5b, 0x85, 0x54, 0xc5, 0xcb, 0x9a, 0x71, 0x7b, 0xed, 0x26,
            0x65, 0xb0, 0xa6, 0xf3, 0xdf, 0x18, 0x4f, 0x8f, 0x82, 0x3f,
            0x43, 0x19, 0x9e, 0x06, 0x1e, 0x54, 0x93, 0x8b, 0xd1, 0xd7,
            0x55, 0x9d, 0xe3, 0xc4, 0xae, 0xef, 0x3b, 0x1c, 0x57, 0xba,
            0xda, 0xf8, 0xd5, 0x29, 0x5d, 0xd6, 0x13, 0xbe, 0x65, 0x73,
            0xa2, 0x62, 0x8d, 0xb4, 0xfc, 0x84, 0x34, 0xcb, 0xb5, 0xdd,
            0x5a, 0x87, 0x20, 0x97, 0xc8, 0x8c, 0x57, 0x42, 0x59, 0x94,
            0x51, 0x0e, 0xb2, 0x6d, 0x22, 0x34, 0xa1, 0x4b, 0x7f, 0x0b,
            0x8d, 0x34, 0x0c, 0x5c, 0x0c, 0xd0, 0x0f, 0x0a, 0x1f, 0x4d,
            0xfc, 0x0f, 0x0f, 0x1c, 0xe0, 0xc9, 0x83, 0x08, 0x0f, 0xf3,
            0xff, 0x8c, 0x3c, 0x0c, 0x32, 0xec, 0x0f, 0xcc, 0xcc, 0x0f,
            0xf1, 0xec, 0x1f, 0x08, 0xbd, 0xe7, 0x32, 0xdc, 0x0f, 0x8f,
            0x1d, 0x04, 0xcd, 0xb3, 0xe7, 0x8c, 0x6c, 0xe4, 0x32, 0x3c,
            0x18, 0x36, 0x08, 0x18, 0xee, 0x0f, 0xec, 0xcf, 0xff, 0x0c,
            0x13, 0xed, 0x2e, 0x03, 0x42, 0x1d, 0xf5, 0x4e, 0xfd, 0x08,
            0x4c, 0xe1, 0x20, 0xbe, 0xc3, 0x2a, 0x0c, 0x1c, 0x00, 0xc2,
            0xf2, 0x1a, 0x1a, 0xbd, 0x0a, 0x30, 0xce, 0x13, 0xfc, 0x31,
            0xfc, 0x03, 0xf2, 0xe3, 0x1b, 0x72, 0xec, 0x1b, 0xf2, 0xe3,
            0x1f, 0xc8, 0xfc, 0xf7, 0xf1, 0xdc, 0x07, 0x31, 0x1e, 0xf0,
            0x35, 0xfc, 0x0b, 0xf5, 0x0c, 0x1c, 0x31, 0x2c, 0xf0, 0x70,
            0x63, 0x10, 0x73, 0xcc, 0x07, 0x74, 0x3c, 0x0c, 0x31, 0x3c,
            0x2c, 0x36, 0x1d, 0x2c, 0xf0, 0x60, 0x03, 0x01, 0xae, 0xe3,
            0xcd, 0x2c, 0xf4, 0xc8, 0xf2, 0xe3, 0x8f, 0x1c, 0xf4, 0x32,
            0x4c, 0xf4, 0x48, 0x03, 0xf4, 0x73, 0xcc, 0x1b, 0x4d, 0x2c,
            0xf0, 0x4d, 0x22, 0x00, 0x0a, 0x03, 0xd4, 0xca, 0x52, 0xe8,
            0x8f, 0x43, 0x08, 0x09, 0x1c, 0xf4, 0xf1, 0xf3, 0x1f, 0x8e,
            0x0c, 0xe0, 0xcc, 0x23, 0x0c, 0xb3, 0xe3, 0x0b, 0x4d, 0xcd,
            0x0b, 0x30, 0xed, 0x03, 0xf7, 0xbc, 0x2f, 0xcc, 0xc3, 0xff,
            0x4a, 0xac, 0x0c, 0x0d, 0xc2, 0x0b, 0x4d, 0xd3, 0xf7, 0xf3,
            0x33, 0x14, 0x0d, 0x03, 0x0c, 0x8f, 0xd3, 0xfb, 0xcd, 0x3c,
            0xf4, 0x08, 0x06, 0x1d, 0xef, 0xf2, 0x33, 0x42, 0x0c, 0xc1,
            0x32, 0x5d, 0x17, 0x50, 0xe3, 0x30, 0x0d, 0x42, 0x06, 0x04,
            0xf3, 0xf3, 0x13, 0x8c, 0x0d, 0x0a, 0x08, 0xec, 0xf3, 0xf2,
            0xfd, 0x23, 0xfc, 0xb2, 0xe4, 0xe2, 0x17, 0x0c, 0x36, 0xf0,
            0x1d, 0x48, 0xfe, 0xcc, 0xf3, 0x3a, 0xd0, 0x73, 0x8c, 0xf6,
            0x1a, 0x0d, 0x0e, 0x8b, 0xf8, 0x76, 0xad, 0xa1, 0x4b, 0x7f,
            0x0b, 0x8d, 0x44, 0x0c, 0x43, 0x0c, 0xdc, 0x0f, 0x0a, 0x0d,
            0xfc, 0xec, 0x0c, 0x04, 0x12, 0x00, 0xf0, 0x05, 0xf8, 0x0f,
            0xf3, 0x09, 0x0f, 0xff, 0x0d, 0xf1, 0xf2, 0x0f, 0x0c, 0x07,
            0x1d, 0xfe, 0x17, 0xdf, 0x13, 0xd7, 0x09, 0xfb, 0x01, 0x28,
            0xe7, 0xfd, 0xd2, 0x15, 0x06, 0x17, 0xe6, 0x05, 0xea, 0x18,
            0xe1, 0x14, 0xeb, 0xda, 0xfd, 0x1f, 0x2d, 0xfa, 0x07, 0x1a,
            0x03, 0xfa, 0x0e, 0x0d, 0xfb, 0xfa, 0x0d, 0x08, 0x0f, 0xf6,
            0xf2, 0x0f, 0x0a, 0x0d, 0xf4, 0xf0, 0xf0, 0xf3, 0x06, 0xfb,
            0xf0, 0xf7, 0x02, 0xfc, 0xfe, 0x05, 0x19, 0x0b, 0xfa, 0x08,
            0x04, 0x0e, 0x0b, 0xf6, 0xf3, 0x09, 0x0e, 0x0d, 0xfd, 0xf7,
            0xf0, 0x04, 0x06, 0xfa, 0xa1, 0x06, 0x06, 0xfd, 0x73, 0x4c,
            0x47, 0xf5, 0x01, 0xd4, 0x62, 0xcf, 0xfa, 0xe1, 0x9b, 0x73,
            0xcc, 0xf2, 0x00, 0xf4, 0x83, 0x33, 0xf3, 0x0c, 0x00, 0xec,
            0x33, 0x0d, 0x0c, 0x18, 0xec, 0x33, 0x0c, 0xf5, 0x07, 0x5c,
            0xf3, 0x0a, 0xe1, 0x5b, 0x0c, 0x0a, 0x12, 0xbb, 0xbe, 0xc2,
            0x86, 0xae, 0x07, 0xc2, 0xbd, 0xc7, 0x30, 0x5d, 0x1c, 0xb0,
            0xcd, 0x03, 0x72, 0x9c, 0xf7, 0xcf, 0xbc, 0xf7, 0x8d, 0x1c,
            0x1c, 0x4d, 0x03, 0xf8, 0x0c, 0x03, 0x14, 0x31, 0xfe, 0x03,
            0x74, 0x4c, 0x04, 0xb2, 0x12, 0xe0, 0xc8, 0x52, 0xf8, 0x48,
            0x13, 0xf4, 0xce, 0xec, 0x03, 0xf1, 0x0d, 0xf0, 0xf7, 0x43,
            0x10, 0xb2, 0xb3, 0xf3, 0x4d, 0x3c, 0xe4, 0x31, 0x3c, 0x1c,
            0x4c, 0xec, 0xa3, 0x80, 0x00, 0x04, 0x06, 0x15, 0xfb, 0xf3,
            0x0c, 0x0c, 0x07, 0x02, 0xe6, 0xe4, 0xe8, 0x15, 0x2d, 0x06,
            0xfb, 0x0a, 0xf7, 0x0e, 0xe2, 0x0d, 0x08, 0x02, 0x0e, 0xf0,
            0x0c, 0x0f, 0xf3, 0xf4, 0xf1, 0x0e, 0xf1, 0x0a, 0x05, 0x82,
            0x81, 0xc8, 0x07, 0x20, 0xd9, 0x41, 0xf6, 0xe0, 0x42, 0x53,
            0xdc, 0x0d, 0x8c, 0xe8, 0x4e, 0xb2, 0xf4, 0x73, 0x01, 0x0c,
            0x19, 0x0d, 0x0e, 0x06, 0xab, 0x76, 0x21, 0xa2, 0x4b, 0x7f,
            0x0b, 0x8d, 0x32, 0x0c, 0x5d, 0x0c, 0xee, 0x0f, 0x0a, 0x12,
            0x71, 0xf3, 0xff, 0x4a, 0x4c, 0xf8, 0x31, 0x1c, 0x04, 0x88,
            0xcc, 0xe7, 0x36, 0x3d, 0x28, 0xcd, 0x03, 0xf0, 0x72, 0x02,
            0x1c, 0x4c, 0xf3, 0x07, 0x4c, 0xf3, 0x07, 0x0e, 0x0e, 0xf0,
            0x37, 0x0c, 0x08, 0x48, 0xcc, 0xeb, 0x0c, 0x1d, 0x04, 0xf7,
            0x0c, 0x0c, 0x0d, 0x7c, 0xe0, 0x32, 0xf2, 0xf3, 0xc9, 0x0d,
            0xf4, 0x8f, 0x1c, 0xe4, 0x4e, 0xd3, 0xff, 0x89, 0x0c, 0x0c,
            0xce, 0xb3, 0x0b, 0x8f, 0xe3, 0xf3, 0x88, 0x03, 0x08, 0x06,
            0x40, 0x3d, 0xf1, 0x2d, 0xf9, 0xa0, 0x12, 0x4e, 0x00, 0x42,
            0x12, 0x2f, 0xd3, 0x23, 0x13, 0x0a, 0x12, 0xf1, 0x0c, 0x04,
            0xb0, 0x03, 0x1c, 0xcd, 0xe3, 0xff, 0x8c, 0x7c, 0x00, 0xf7,
            0x93, 0x2b, 0x71, 0xbd, 0x0b, 0xb3, 0xc3, 0x07, 0x0d, 0xcd,
            0x0b, 0x48, 0xec, 0xfb, 0x4d, 0xfd, 0x0b, 0x72, 0x1c, 0xf0,
            0x72, 0x0c, 0x08, 0x30, 0x4c, 0x00, 0x08, 0xfc, 0xd3, 0x32,
            0x0c, 0xf4, 0xf0, 0x2c, 0x0c, 0xb2, 0x3c, 0x00, 0x8e, 0x4c,
            0xf8, 0x8d, 0xd3, 0xfb, 0xb2, 0x0c, 0xf4, 0xf7, 0x3c, 0x2c,
            0xb2, 0x93, 0xf7, 0x8c, 0x0c, 0x08, 0x06, 0x0c, 0x0c, 0x3c,
            0xed, 0x36, 0x5e, 0xe3, 0xec, 0x3e, 0x4e, 0xf2, 0xbc, 0xd0,
            0x69, 0xcc, 0x0a, 0x12, 0xf2, 0x33, 0x00, 0x8d, 0xd3, 0xf3,
            0xc9, 0x43, 0xd0, 0x4e, 0x33, 0xf4, 0xcc, 0x1d, 0xe0, 0xb7,
            0x03, 0xfc, 0x4f, 0x1d, 0xfc, 0x0d, 0x7c, 0xf8, 0x0f, 0x42,
            0x08, 0x4f, 0x43, 0x08, 0x0d, 0xc3, 0x03, 0x4d, 0xdd, 0x0b,
            0x30, 0xdc, 0x03, 0xf0, 0x0c, 0x00, 0x73, 0xfc, 0xf3, 0x4c,
            0xed, 0xf7, 0x72, 0x1c, 0xf8, 0xf2, 0x2c, 0x0c, 0x37, 0x3c,
            0x04, 0xcc, 0x23, 0xfc, 0x0c, 0x43, 0x0c, 0xce, 0xd3, 0x07,
            0xc9, 0x03, 0x08, 0x06, 0xd1, 0x0f, 0xfc, 0xe1, 0x3e, 0x0d,
            0xcd, 0xed, 0xef, 0x18, 0x1d, 0x4d, 0xf0, 0xe6, 0x41, 0xd6,
            0x0c, 0x0e, 0xa2, 0xbe, 0xb1, 0xa0, 0xa2, 0x4b, 0x7f, 0x0b,
            0x8d, 0x32, 0x0c, 0x58, 0x0c, 0xee, 0x0f, 0x0a, 0x05, 0xf2,
            0xe3, 0xff, 0x73, 0xfc, 0x0b, 0x33, 0x3c, 0x08, 0x48, 0xfc,
            0x0b, 0xf5, 0x83, 0x07, 0xce, 0xdd, 0xf7, 0x4e, 0x1d, 0x0c,
            0x08, 0x06, 0x07, 0x43, 0x17, 0x4d, 0x03, 0x02, 0x07, 0x4d,
            0xe9, 0xd1, 0x0d, 0x01, 0x0d, 0xfc, 0x0d, 0x0a, 0x12, 0x33,
            0x0c, 0x0c, 0xf1, 0x0c, 0x00, 0x71, 0x3c, 0xfc, 0x4c, 0x43,
            0x18, 0x33, 0x8c, 0x13, 0xb3, 0xec, 0x0b, 0x0d, 0xf3, 0x1f,
            0xcc, 0xec, 0x1f, 0xb7, 0xd3, 0x03, 0x8d, 0xac, 0xe7, 0xf2,
            0x8c, 0x04, 0x49, 0xe3, 0xe3, 0xcd, 0x43, 0xf4, 0xb3, 0x2c,
            0xf0, 0x31, 0x0c, 0x08, 0x71, 0x2c, 0x04, 0xcd, 0x33, 0x0c,
            0x4d, 0x2c, 0xf8, 0x32, 0xec, 0x0f, 0xf3, 0x0c, 0x0c, 0x73,
            0xf3, 0x0f, 0x32, 0xfc, 0x03, 0x0a, 0x0c, 0x08, 0x30, 0xb1,
            0x5d, 0x22, 0x12, 0x20, 0x2c, 0x22, 0x1e, 0xe1, 0x2c, 0x3d,
            0xfe, 0xd0, 0xd8, 0xde, 0xe8, 0x13, 0x03, 0x0d, 0x03, 0xce,
            0xe1, 0xfb, 0xf9, 0xa8, 0xdf, 0xba, 0xae, 0x0e, 0x03, 0x13,
            0x52, 0x3d, 0x3c, 0xd0, 0xfe, 0x97, 0x3d, 0x38, 0x32, 0xdc,
            0x03, 0xea, 0xfe, 0x9e, 0xdd, 0x1f, 0xf3, 0x23, 0xdd, 0x02,
            0x3f, 0x2d, 0x0c, 0x30, 0x3d, 0xe0, 0x1c, 0x0e, 0xec, 0x0c,
            0xcf, 0x00, 0x1f, 0x32, 0x08, 0x07, 0x39, 0xb2, 0xd3, 0xc3,
            0x48, 0x1f, 0x41, 0x11, 0x52, 0xf3, 0x17, 0x3d, 0xd1, 0x31,
            0x4f, 0xe3, 0x12, 0xff, 0xe2, 0x12, 0x33, 0xf3, 0x33
        ])
    }
    
    private class MockEncryptedOfflineRecordingDataMAG {
        let security:PmdSecret
        
        init() throws {
            security = try PmdSecret(strategy: PmdSecret.SecurityStrategy.aes128, key: Data([0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F]))
        }
        
        static let securedOfflineData = Data([
            0x02, 0x8b, 0xa1, 0x99, 0xdb, 0x37, 0xec, 0x43, 0xf8, 0x65,
            0xae, 0x8a, 0x57, 0xc8, 0xb5, 0x28, 0x1e, 0x9d, 0xcc, 0x30,
            0x86, 0x90, 0xf6, 0x55, 0xf8, 0xbc, 0x0b, 0xeb, 0x04, 0x8b,
            0x35, 0xac, 0xf8, 0x1a, 0xe5, 0xc2, 0x04, 0xeb, 0xc6, 0xce,
            0x9a, 0x5c, 0x0c, 0x4e, 0x5d, 0x62, 0x1b, 0xfc, 0x93, 0x6e,
            0xf1, 0x43, 0x90, 0x9d, 0x70, 0x23, 0x53, 0xb1, 0x87, 0x4d,
            0x70, 0xdc, 0xd5, 0x6f, 0x10, 0x84, 0x34, 0xcb, 0xb5, 0xdd,
            0x5a, 0x87, 0x20, 0x97, 0xc8, 0x8c, 0x57, 0x42, 0x59, 0x94,
            0x51, 0x00, 0x8a, 0xb7, 0x14, 0xdd, 0x2f, 0x99, 0x13, 0x0c,
            0x86, 0xf4, 0x04, 0x15, 0x06, 0x51, 0xf9, 0x02, 0x19, 0xf5,
            0x07, 0x48, 0x36, 0xd7, 0xd9, 0xf8, 0xf6, 0x36, 0x27, 0x28,
            0xf7, 0xf9, 0x19, 0x0a, 0x39, 0xf6, 0x27, 0xc4, 0xe2, 0xd4,
            0x49, 0x49, 0xe6, 0xc7, 0xf5, 0xe6, 0x49, 0xf8, 0x26, 0xbb,
            0x08, 0x04, 0x55, 0xf7, 0x29, 0xb8, 0x15, 0x06, 0x53, 0x18,
            0x09, 0xba, 0xf4, 0x14, 0x39, 0x09, 0x00, 0x0e, 0x86, 0x19,
            0x0e, 0xbb, 0x18, 0x02, 0x7b, 0x27, 0x0e, 0xc7, 0x19, 0xda,
            0x86, 0xe6, 0xf1, 0x07, 0xf7, 0xf1, 0x02, 0x1e, 0x46, 0x0a,
            0x39, 0xe7, 0x03, 0x04, 0x19, 0xd8, 0x07, 0x26, 0xf6, 0x18,
            0x04, 0x1b, 0x27, 0xc4, 0x05, 0x14, 0xfb, 0xe9, 0xc4, 0x37,
            0xf8, 0x3d, 0x14, 0x14, 0x26, 0x33, 0xe6, 0xd4, 0xba, 0x3d,
            0xe6, 0xfb, 0xf4, 0x35, 0x00, 0x0e, 0x47, 0x16, 0x0e, 0xbd,
            0x26, 0xfe, 0x46, 0x16, 0xfa, 0xf9, 0xe6, 0x15, 0xca, 0xf9,
            0xfd, 0xc6, 0x3b, 0x05, 0x02, 0x16, 0x12, 0x04, 0x17, 0x09,
            0xfb, 0x14, 0xf7, 0x15, 0xd7, 0xd8, 0xd6, 0x56, 0x56, 0x17,
            0xba, 0xe4, 0x06, 0x05, 0x35, 0x16, 0x18, 0xe8, 0x38, 0xf4,
            0x00, 0x36, 0x04, 0x14, 0xe6, 0x87, 0xb6, 0xd9, 0xf9, 0x96,
            0xe9, 0x87, 0x17, 0x0a, 0x42, 0xf7, 0xf9, 0x04, 0xf6, 0x05,
            0x8f, 0xe4, 0x05, 0x82, 0xa9, 0xc1, 0x84, 0xc6, 0x05, 0x02,
            0x37, 0x12, 0xcd, 0xb9, 0xfd, 0x38, 0x89, 0xfd, 0x45, 0x06,
            0xee, 0x46, 0xb6, 0xfd, 0xbb, 0xf6, 0x09, 0x0e, 0x06, 0xfa,
            0xb8, 0x99, 0x05, 0x84, 0x16, 0x02, 0xce, 0x06, 0x06, 0x79,
            0xa6, 0xf1, 0xb9, 0x09, 0xfe, 0x85, 0x36, 0x32, 0x8e, 0xa6,
            0x05, 0xfd, 0x7b, 0xf9, 0x45, 0x19, 0xf6, 0x04, 0xf6, 0x15,
            0x86, 0xe6, 0xfd, 0x43, 0x07, 0x02, 0x40, 0xa6, 0xe5, 0x3a,
            0xa6, 0x09, 0xb9, 0x66, 0x0e, 0xc4, 0x09, 0x02, 0x3b, 0xe6,
            0xf9, 0xb8, 0x09, 0x22, 0xc9, 0x19, 0x06, 0x47, 0xeb, 0x08,
            0x11, 0x07, 0x00, 0x5a, 0x6e, 0x2c, 0x85, 0x2c, 0x99, 0x13,
            0x0c, 0x86, 0xeb, 0x04, 0x0b, 0x06, 0x5b, 0xf9, 0x02, 0x19,
            0x54, 0x17, 0xe6, 0x06, 0xf8, 0xfb, 0x05, 0xd7, 0x47, 0x0a,
            0x68, 0xd6, 0x32, 0xe6, 0xe7, 0xec, 0x14, 0x4b, 0x52, 0x07,
            0x04, 0x9b, 0x2a, 0xe4, 0x57, 0x25, 0x18, 0xc7, 0xa8, 0x17,
            0x37, 0x24, 0x05, 0xcd, 0x4b, 0x18, 0x70, 0xb4, 0xe9, 0xcd,
            0x04, 0xf9, 0x54, 0x27, 0x25, 0xa9, 0x0d, 0x00, 0x16, 0x78,
            0xf9, 0xfd, 0xfb, 0x16, 0x0e, 0x07, 0x37, 0xfe, 0xb9, 0xf9,
            0x11, 0x47, 0x66, 0x02, 0x42, 0x86, 0x02, 0x79, 0xf9, 0xe9,
            0x70, 0xc9, 0x15, 0x46, 0x19, 0x02, 0xce, 0xe9, 0x11, 0x05,
            0xa6, 0x0d, 0x86, 0x08, 0xfe, 0x02, 0x16, 0x04, 0x69, 0x2b,
            0xd6, 0xa6, 0xe8, 0x1d, 0x45, 0x16, 0x32, 0xf9, 0xf6, 0xd9,
            0xb7, 0xf7, 0x36, 0x29, 0x0b, 0xf6, 0xf7, 0x24, 0x06, 0x16,
            0xf4, 0x05, 0x0e, 0xef, 0xf9, 0x66, 0xd9, 0xb7, 0xe9, 0x6c,
            0x87, 0x51, 0x00, 0x16, 0x39, 0xe7, 0xf9, 0xc7, 0x36, 0xf2,
            0x3b, 0x16, 0xf6, 0xfb, 0x48, 0x0a, 0x06, 0x27, 0x26, 0xc6,
            0x29, 0xf6, 0x3a, 0x09, 0xfa, 0xbb, 0xc6, 0x26, 0x44, 0x09,
            0x06, 0x35, 0xe8, 0x0d, 0xf9, 0x48, 0x02, 0xb9, 0x16, 0x1a,
            0x02, 0x26, 0x36, 0xe9, 0xf4, 0xd8, 0x04, 0xd6, 0xd6, 0x0d,
            0x09, 0x27, 0x03, 0x29, 0x16, 0x19, 0x04, 0xf9, 0xe4, 0x15,
            0xf4, 0x48, 0x0b, 0x46, 0xf6, 0xd8, 0xda, 0xd6, 0x46, 0x35,
            0x79, 0xe4, 0xb4, 0xb5, 0xf7, 0x7b, 0xe9, 0xf7, 0xb6, 0x29,
            0x13, 0x36, 0xf7, 0xef, 0xc6, 0x54, 0x04, 0x49, 0xeb, 0x3b,
            0x00, 0x16, 0x46, 0x18, 0xf6, 0x45, 0x29, 0x26, 0x84, 0xe6,
            0xfd, 0x39, 0x08, 0x0e, 0x79, 0x46, 0x1e, 0x87, 0x29, 0x06,
            0xbf, 0x09, 0x02, 0x7d, 0x46, 0x2e, 0x47, 0x36, 0xf6, 0x38,
            0xeb, 0x01, 0x04, 0x77, 0x06, 0xc4, 0x09, 0xfe, 0x02, 0x01,
            0x7c, 0x08, 0x1c, 0xe3, 0xf4, 0xf4, 0xed, 0xf8, 0x29, 0xe2,
            0x06, 0x12, 0x07, 0x00, 0x8c, 0x34, 0x92, 0x2b, 0x2d, 0x99,
            0x13, 0x0c, 0x86, 0xf6, 0x04, 0x15, 0x06, 0x5d, 0xf9, 0x02,
            0x16, 0x07, 0x06, 0xea, 0x1a, 0x44, 0x17, 0x08, 0xea, 0x24,
            0x04, 0x15, 0xf9, 0x2d, 0x59, 0x09, 0xd4, 0xd9, 0xf7, 0x04,
            0xd7, 0x39, 0x46, 0x37, 0xe7, 0x00, 0x16, 0x47, 0xf9, 0xf9,
            0xb9, 0xc6, 0x01, 0x44, 0x24, 0xf6, 0x06, 0xb6, 0xc9, 0xc4,
            0x86, 0x06, 0x04, 0xc7, 0xfd, 0x3e, 0xe6, 0x0d, 0xc6, 0x19,
            0xfa, 0x42, 0x09, 0xfa, 0x47, 0xf6, 0x01, 0x8c, 0x17, 0x06,
            0x87, 0x99, 0xe9, 0x02, 0x1e, 0xc7, 0x29, 0x27, 0x09, 0x19,
            0xd9, 0x48, 0x33, 0x28, 0xf7, 0xca, 0x29, 0x71, 0xe5, 0x14,
            0xbd, 0x46, 0xc7, 0xe6, 0xd8, 0x1b, 0x18, 0x69, 0xe2, 0xeb,
            0xe7, 0x28, 0xd9, 0xe6, 0xc7, 0x14, 0xf6, 0x46, 0x14, 0x17,
            0xf2, 0x00, 0x0e, 0x38, 0x26, 0xf2, 0xfe, 0x49, 0x06, 0xf9,
            0xa6, 0xfa, 0x79, 0xe6, 0x25, 0x46, 0x16, 0xf2, 0xc6, 0x1b,
            0x06, 0x02, 0x16, 0x09, 0x22, 0x0d, 0x26, 0xc9, 0x25, 0x08,
            0x16, 0xea, 0xc6, 0x19, 0xf2, 0x04, 0xeb, 0x29, 0xf8, 0x35,
            0x05, 0x24, 0xe7, 0x1d, 0x01, 0x39, 0x06, 0x00, 0x16, 0x7c,
            0x19, 0xea, 0xc3, 0x39, 0xfe, 0xfa, 0xc7, 0xf9, 0x46, 0x17,
            0xd6, 0x86, 0xe6, 0xf1, 0x87, 0x24, 0xf2, 0x04, 0x06, 0xee,
            0xbc, 0x66, 0x16, 0x84, 0x47, 0x0e, 0xbd, 0x09, 0x0a, 0x8a,
            0x38, 0x06, 0xf8, 0x38, 0x0d, 0x02, 0x36, 0xef, 0xc7, 0x06,
            0x44, 0x47, 0xd7, 0x04, 0xe5, 0x29, 0x06, 0xe7, 0xe6, 0x08,
            0xdc, 0x34, 0x02, 0x02, 0x08, 0xfd, 0x08, 0x16, 0x03, 0xf7,
            0xd4, 0x16, 0x16, 0x26, 0xf8, 0xe8, 0x2b, 0xf7, 0x05, 0xc4,
            0x09, 0x6b, 0x06, 0x20, 0xe5, 0xfb, 0xf8, 0xc6, 0x26, 0x08,
            0x28, 0x36, 0x19, 0xb4, 0xe5, 0x20, 0x5a, 0xf9, 0x1c, 0xa4,
            0x0b, 0xf9, 0x46, 0xe5, 0x27, 0x37, 0x18, 0xc7, 0xe6, 0x37,
            0x44, 0x26, 0xe6, 0xd2, 0xd9, 0x26, 0x3a, 0x16, 0xe7, 0x11,
            0x07, 0x00, 0x4c, 0x51, 0xb2, 0xce, 0x2d, 0x99, 0x13, 0x0c,
            0x86, 0xf6, 0x04, 0x15, 0x06, 0x5b, 0xf9, 0x00, 0x01, 0x06,
            0x06, 0x06, 0x46, 0x99, 0x22, 0xb9, 0x36, 0x02, 0xb1, 0x3a,
            0xfe, 0xbb, 0xe9, 0x11, 0x3b, 0x02, 0x0e, 0xf7, 0x15, 0x19,
            0x26, 0x08, 0x08, 0xf7, 0x02, 0x16, 0x26, 0x28, 0x17, 0x00,
            0x36, 0x46, 0xf7, 0xe9, 0x84, 0xe9, 0xe5, 0xb9, 0xd6, 0x01,
            0x84, 0x37, 0x02, 0xb8, 0x09, 0xf6, 0x86, 0x59, 0xfa, 0x8e,
            0x24, 0xfe, 0xba, 0x89, 0xe5, 0xc6, 0x26, 0x0e, 0x02, 0xd7,
            0xfd, 0x07, 0xa6, 0xe9, 0xc6, 0xf6, 0xfd, 0x4e, 0x16, 0xf2,
            0xf9, 0x96, 0xf1, 0x38, 0xe6, 0xf9, 0x41, 0x06, 0x06, 0xf9,
            0xb6, 0x01, 0x07, 0x16, 0x06, 0xcd, 0xd7, 0x01, 0x85, 0x59,
            0xed, 0x44, 0xe6, 0x09, 0xc5, 0xf9, 0x05, 0xc7, 0xb9, 0xfd,
            0x79, 0x19, 0x06, 0x83, 0xf6, 0x09, 0xb9, 0x16, 0xf2, 0xc7,
            0x56, 0x06, 0x31, 0x06, 0xf6, 0xb8, 0x59, 0x16, 0x44, 0xd6,
            0x09, 0x41, 0x19, 0xfe, 0x05, 0x69, 0x0d, 0x86, 0xe6, 0x01,
            0x47, 0xc6, 0x05, 0x39, 0x06, 0xf6, 0x47, 0x16, 0x06, 0x02,
            0x36, 0x18, 0x16, 0x48, 0x19, 0x38, 0xa6, 0xe6, 0xe5, 0x12,
            0x25, 0xe9, 0x18, 0x01, 0x14, 0x26, 0xff, 0x06, 0x17, 0x08,
            0x1b, 0xd4, 0x09, 0xe9, 0x3a, 0xd5, 0x17, 0xf4, 0x56, 0x26,
            0xf8, 0xe6, 0xc4, 0x35, 0x04, 0x17, 0xe9, 0x0b, 0xf8, 0x45,
            0x36, 0xf4, 0x9b, 0xb6, 0x2d, 0x67, 0x34, 0xe7, 0xc8, 0x49,
            0x15, 0xe7, 0xc9, 0x18, 0x29, 0x0b, 0xe6, 0xd5, 0xf2, 0x47,
            0x2b, 0x47, 0xf8, 0x45, 0xb9, 0xd9, 0xff, 0x56, 0xe2, 0xf5,
            0xc9, 0x3a, 0xe7, 0x00, 0x12, 0x04, 0xf6, 0x05, 0x8e, 0x16,
            0x02, 0x44, 0x99, 0x15, 0xb8, 0x19, 0x0a, 0x00, 0x19, 0x0a,
            0x78, 0x99, 0x0d, 0xc7, 0x18, 0x0e, 0x01, 0x06, 0x0e, 0xf9,
            0xa9, 0x0d, 0xc4, 0x26, 0x36, 0x4a, 0x98, 0x01, 0x84, 0x2b,
            0x05, 0x06, 0x39, 0x0a, 0x85, 0x56, 0x0a, 0xba, 0xd9, 0xfd,
            0x11, 0x07, 0x00, 0x18, 0xb0, 0x15, 0x75, 0x2a, 0x99, 0x13,
            0x0c, 0x86, 0xf5, 0x04, 0x16, 0x06, 0x51, 0xf9, 0x00, 0x05,
            0x8c, 0x16, 0xfe, 0x84, 0x96, 0x0d, 0x07, 0x02, 0x2e, 0xf5,
            0xf2, 0x19, 0xba, 0xd9, 0xf9, 0x29, 0x4a, 0xdb, 0x5b, 0xd2,
            0x66, 0xd2, 0x68, 0xb7, 0xf6, 0xb9, 0x55, 0x0b, 0x59, 0xa8,
            0x46, 0xa6, 0x16, 0xd6, 0x27, 0x39, 0x13, 0xbb, 0xf7, 0xf8,
            0x34, 0xf8, 0x36, 0x07, 0x35, 0xe6, 0x19, 0xe7, 0x04, 0xe8,
            0x26, 0xfb, 0x22, 0xf9, 0x26, 0xb8, 0xf8, 0xd7, 0x24, 0x35,
            0xf9, 0x08, 0xc9, 0x15, 0x08, 0x26, 0x48, 0x25, 0x26, 0x00,
            0x0e, 0x7b, 0xe9, 0xfd, 0x44, 0xc6, 0x26, 0x05, 0x16, 0xfa,
            0x70, 0xe8, 0x01, 0x7b, 0x09, 0x02, 0x46, 0x36, 0x0a, 0x02,
            0x0e, 0xd5, 0xd6, 0xf7, 0xf7, 0x32, 0x29, 0xda, 0xfd, 0xc8,
            0x22, 0xe8, 0xf9, 0x00, 0x0e, 0x7b, 0x06, 0x02, 0x05, 0xc7,
            0x2e, 0x84, 0xf9, 0x05, 0xf2, 0xfa, 0x09, 0x83, 0x26, 0x1e,
            0x7b, 0xb7, 0xf5, 0x02, 0x1e, 0xbc, 0xe4, 0x07, 0xf2, 0xf4,
            0x19, 0x18, 0xf8, 0x15, 0xf5, 0x03, 0xf7, 0xf8, 0xf8, 0xf9,
            0x58, 0x48, 0x29, 0xc7, 0x05, 0xf8, 0x5b, 0x78, 0x00, 0xf7,
            0x96, 0xea, 0x06, 0x09, 0x3a, 0xe6, 0x04, 0xc0, 0x66, 0x19,
            0x2b, 0x00, 0x0e, 0xb9, 0xf8, 0x05, 0x39, 0xe6, 0x21, 0x02,
            0x16, 0xfa, 0xc5, 0xdb, 0x0d, 0xc6, 0xf9, 0x11, 0x84, 0x19,
            0xfa, 0x02, 0x16, 0xb6, 0x09, 0x69, 0x54, 0xf4, 0xc8, 0xb9,
            0x16, 0xe4, 0x57, 0x08, 0x1a, 0xc8, 0xf6, 0x09, 0x65, 0x16,
            0x05, 0xaa, 0x04, 0xf5, 0x33, 0xf4, 0x16, 0x00, 0x0e, 0x3d,
            0x09, 0xfe, 0x3a, 0xb6, 0x02, 0xba, 0x37, 0x06, 0xb1, 0x54,
            0xea, 0xf8, 0x69, 0xe6, 0xbb, 0x06, 0x0a, 0x02, 0x13, 0xfb,
            0x04, 0xf4, 0xf5, 0xfb, 0x06, 0xef, 0x39, 0x38, 0x47, 0x05,
            0xc4, 0xd9, 0xeb, 0x3a, 0x07, 0x14, 0xe4, 0x39, 0x0b, 0xe2,
            0xd9, 0xe4, 0x18, 0xf8, 0x26, 0x26, 0x13, 0x17, 0xd6, 0xea,
            0x07, 0x11, 0x07, 0x00, 0x26, 0xb9, 0xdf, 0x0d, 0x2b, 0x99,
            0x13, 0x0c, 0x86, 0xe9, 0x04, 0x16, 0x06, 0x5c, 0xf9, 0x05,
            0x04, 0xcf, 0xa7, 0x05, 0x00, 0x1e, 0xc2, 0x16, 0x02, 0x79,
            0xb6, 0xf1, 0x44, 0x19, 0x0e, 0xca, 0xd6, 0x01, 0x47, 0x56,
            0xf1, 0x45, 0xb9, 0xfd, 0x46, 0xd6, 0x01, 0x07, 0x86, 0x06,
            0x44, 0x06, 0x02, 0x7c, 0xe6, 0xfd, 0x85, 0xe9, 0xfd, 0x87,
            0x14, 0x06, 0x06, 0x06, 0xd6, 0xb8, 0x06, 0xfe, 0x86, 0x06,
            0x06, 0x85, 0xd6, 0x05, 0x7a, 0xe6, 0xf1, 0x07, 0x57, 0xfa,
            0x02, 0x16, 0x22, 0xb6, 0xf9, 0x39, 0x17, 0x59, 0xeb, 0x1b,
            0xe5, 0xe8, 0xa7, 0xeb, 0x33, 0x65, 0xe5, 0xf9, 0x09, 0x48,
            0xd9, 0xf6, 0xd9, 0x49, 0x09, 0x02, 0x00, 0x0e, 0x86, 0xf9,
            0x2d, 0xca, 0x16, 0x06, 0x04, 0x58, 0xf9, 0x38, 0x26, 0x06,
            0xf8, 0x59, 0x06, 0x79, 0x46, 0xfa, 0x02, 0x16, 0x07, 0x18,
            0x17, 0xfa, 0xc4, 0x17, 0xf7, 0xe6, 0xfb, 0xe9, 0x38, 0xd4,
            0xf4, 0xf7, 0x1a, 0x56, 0x17, 0xf0, 0xc9, 0x17, 0x38, 0x47,
            0xf6, 0xd7, 0x00, 0x0e, 0x38, 0x09, 0x0e, 0xfa, 0x59, 0x0e,
            0xb9, 0x46, 0x02, 0xcc, 0x09, 0xea, 0x3b, 0x46, 0xf9, 0x39,
            0x37, 0x0e, 0x02, 0x0e, 0x0b, 0xb6, 0xf8, 0xc4, 0x74, 0xe6,
            0x19, 0xa6, 0x45, 0x38, 0x58, 0xdb, 0x00, 0x16, 0x7b, 0x26,
            0xf2, 0x06, 0x16, 0xf2, 0x84, 0x27, 0x02, 0x04, 0x06, 0xe6,
            0x78, 0x16, 0xfa, 0xb9, 0x17, 0x0e, 0x07, 0x17, 0x12, 0x79,
            0xb9, 0x01, 0x38, 0x28, 0xf6, 0x82, 0xf8, 0x0d, 0xba, 0xb7,
            0x01, 0x07, 0x26, 0xfe, 0x02, 0x0e, 0x34, 0x06, 0x39, 0xe7,
            0xf9, 0xc9, 0x36, 0x00, 0x35, 0xe6, 0xdd, 0xd9, 0x00, 0x0e,
            0x82, 0x09, 0x22, 0x8d, 0xe6, 0x15, 0x47, 0xa8, 0x0d, 0x04,
            0x29, 0xfa, 0xba, 0xd9, 0x0d, 0xf9, 0xf9, 0x05, 0x05, 0x0e,
            0x2d, 0x88, 0x7c, 0x03, 0xa6, 0xed, 0x7c, 0x72, 0x66, 0x02,
            0x01, 0xd9, 0x36, 0x04, 0x11, 0xcb, 0xfa, 0x2d, 0x09, 0x47,
            0x60, 0x03, 0x11, 0x07, 0x00, 0x08, 0x2c, 0xc9, 0xa3, 0x2b,
            0x99, 0x13, 0x0c, 0x86, 0xf3, 0x04, 0x1a, 0x06, 0x5a, 0xf9,
            0x00, 0x0e, 0xba, 0xd8, 0x01, 0xc4, 0xf9, 0xe9, 0x44, 0x09,
            0x06, 0x45, 0xf4, 0x01, 0x3b, 0xd7, 0xe9, 0xc5, 0x19, 0x06,
            0x02, 0x16, 0xd7, 0x38, 0xb7, 0xf9, 0xd8, 0x37, 0x61, 0x17,
            0x36, 0xcf, 0x06, 0x29, 0x24, 0x16, 0xd9, 0xe8, 0x08, 0x06,
            0x56, 0xe6, 0x0b, 0xb6, 0x24, 0xf7, 0x00, 0x0e, 0x47, 0xf6,
            0x05, 0x39, 0x56, 0xfe, 0xf8, 0x08, 0x02, 0xb8, 0x17, 0x22,
            0x41, 0xe6, 0xe9, 0xbb, 0xeb, 0x0d, 0x02, 0x0e, 0x22, 0x57,
            0xf8, 0xac, 0xe6, 0xd9, 0x70, 0xf5, 0x07, 0xca, 0xd7, 0xf4,
            0x00, 0x16, 0x84, 0xd9, 0x0d, 0x79, 0x06, 0x02, 0x47, 0xe9,
            0x01, 0x8f, 0x26, 0x0e, 0xf9, 0x88, 0xf1, 0x07, 0x46, 0x0a,
            0x01, 0xe7, 0xfd, 0x3b, 0xc7, 0xf9, 0x47, 0x64, 0xfa, 0x05,
            0xf6, 0xed, 0xbe, 0x39, 0x06, 0x46, 0x39, 0x06, 0x02, 0x0e,
            0xfd, 0x06, 0x19, 0x3a, 0x06, 0xd7, 0x12, 0x15, 0x1b, 0xe8,
            0xd8, 0xf9, 0x00, 0x1e, 0x87, 0xc9, 0x09, 0x84, 0xe7, 0x09,
            0x44, 0xb5, 0xfe, 0x45, 0x09, 0xc2, 0x7d, 0xc9, 0x01, 0xb8,
            0x96, 0x09, 0x38, 0x16, 0x02, 0x03, 0x26, 0x02, 0x06, 0xf6,
            0x0d, 0x39, 0x36, 0x22, 0x86, 0x18, 0x06, 0x38, 0xf9, 0x0d,
            0x01, 0x06, 0xe6, 0xc7, 0xa6, 0xf9, 0x04, 0x07, 0xf2, 0xf9,
            0xe9, 0x09, 0xfa, 0x09, 0x06, 0x47, 0x29, 0x0e, 0x02, 0x26,
            0x17, 0x26, 0x09, 0x27, 0x17, 0x19, 0xd6, 0xa8, 0x06, 0xfb,
            0x29, 0x04, 0x04, 0x19, 0x06, 0x38, 0x07, 0x26, 0xd5, 0x29,
            0xc4, 0x48, 0xf7, 0x3a, 0x27, 0x06, 0xf4, 0xb9, 0xc8, 0x2d,
            0xd4, 0x27, 0xe4, 0x48, 0xf4, 0x02, 0x06, 0x48, 0x13, 0xd9,
            0xc4, 0x1a, 0x22, 0xfb, 0xe0, 0x09, 0xe2, 0x2f, 0x00, 0x0c,
            0x79, 0xb5, 0x15, 0xc0, 0x19, 0xc6, 0x47, 0x99, 0x0d, 0xb9,
            0x19, 0x0e, 0x05, 0x06, 0x12, 0xb9, 0xe6, 0xf9, 0x06, 0x06,
            0xf2, 0x01, 0x06, 0x11, 0x07, 0x00, 0xe0, 0x80, 0xbe, 0x3e,
            0x28, 0x99, 0x13, 0x0c, 0x86, 0xeb, 0x04, 0x1f, 0x06, 0x5d,
            0xf9, 0x00, 0x0b, 0x07, 0xc8, 0x09, 0xb8, 0x16, 0x16, 0x46,
            0x19, 0x02, 0xf9, 0x28, 0x3a, 0xc6, 0x79, 0x02, 0x86, 0x0b,
            0xfe, 0x31, 0xe6, 0xf5, 0x47, 0x56, 0x02, 0x84, 0xe6, 0xf9,
            0x7b, 0x16, 0x06, 0x02, 0x0e, 0x09, 0x56, 0xf9, 0x3b, 0xe8,
            0x04, 0xf9, 0x44, 0x28, 0xf3, 0xa7, 0xe4, 0x00, 0x0e, 0xc2,
            0xf4, 0x01, 0xc7, 0xc9, 0xe1, 0xb9, 0xd9, 0x09, 0x39, 0x09,
            0xf6, 0x07, 0x06, 0x0e, 0x47, 0xf7, 0x0d, 0x02, 0x16, 0xeb,
            0x08, 0x09, 0x17, 0xf2, 0xe4, 0xc4, 0xed, 0x38, 0x1b, 0x17,
            0xd5, 0x65, 0x17, 0xf9, 0xe9, 0x22, 0xf7, 0xc7, 0x06, 0x17,
            0x09, 0x08, 0x04, 0x00, 0x0e, 0x78, 0x06, 0x0a, 0x44, 0x26,
            0xf2, 0x06, 0xc4, 0xf1, 0x7a, 0x27, 0xde, 0x78, 0x26, 0xfe,
            0x06, 0x09, 0x06, 0x02, 0x0e, 0xd7, 0x16, 0xf8, 0x2b, 0x19,
            0x07, 0xd5, 0x37, 0xe6, 0x18, 0x06, 0x02, 0x00, 0x0e, 0x07,
            0xf6, 0xf9, 0xbb, 0xf6, 0x01, 0xbb, 0x59, 0x02, 0x0f, 0xf6,
            0x1d, 0xf9, 0x99, 0x0d, 0x43, 0xe8, 0x05, 0x02, 0x0e, 0xc6,
            0x16, 0x08, 0x67, 0xcb, 0x25, 0xb2, 0x28, 0xf8, 0x21, 0xf9,
            0x16, 0x00, 0x1e, 0xff, 0x49, 0x06, 0x47, 0x86, 0x15, 0x78,
            0x74, 0xf6, 0x44, 0x18, 0xe6, 0xf1, 0x26, 0x12, 0x86, 0x26,
            0xfe, 0x84, 0x19, 0xfe, 0xb8, 0x16, 0x02, 0x79, 0x06, 0x02,
            0xba, 0x39, 0xfa, 0xfb, 0xa9, 0x16, 0x38, 0x27, 0xf2, 0x73,
            0xd9, 0x0d, 0x47, 0x19, 0x0a, 0xc5, 0x19, 0x12, 0x86, 0x18,
            0xf6, 0xf8, 0x19, 0x0e, 0xb9, 0xf6, 0x01, 0x02, 0x0e, 0x0a,
            0x17, 0xd5, 0xe0, 0x27, 0x08, 0x2a, 0xfb, 0x35, 0x02, 0xf5,
            0xe8, 0x00, 0x0e, 0xfc, 0xf9, 0x01, 0xf9, 0x79, 0x0e, 0x39,
            0xb6, 0x06, 0x3f, 0x46, 0xfe, 0x70, 0x76, 0xfa, 0x38, 0x16,
            0xf2, 0x02, 0x01, 0x2d, 0x24, 0xdd, 0xe5, 0x29, 0x36, 0x28,
            0xb8, 0xe6, 0xf7, 0x07, 0x10, 0x07, 0x00, 0xf0, 0x58, 0x0d,
            0xd3, 0x28, 0x99, 0x13, 0x0c, 0x86, 0xeb, 0x04, 0x0a, 0x06,
            0x5d, 0xf9, 0x00, 0x16, 0x07, 0x17, 0x22, 0x04, 0xc9, 0xf1,
            0x46, 0xc9, 0x05, 0xc6, 0x16, 0xf2, 0x85, 0x06, 0xfe, 0x7b,
            0xe6, 0x0d, 0x0a, 0x15, 0xfa, 0x3b, 0x46, 0xdd, 0xbd, 0x29,
            0x0a, 0x04, 0x46, 0x0a, 0xb9, 0x19, 0xfa, 0xc7, 0x06, 0xfe,
            0x02, 0x2e, 0x08, 0xd9, 0x22, 0x16, 0x26, 0xe6, 0xe9, 0x04,
            0x0a, 0x46, 0xd9, 0xf7, 0xd4, 0x56, 0xf4, 0x1b, 0x16, 0xf9,
            0xf4, 0xd7, 0x17, 0xf7, 0xf7, 0x18, 0x27, 0x49, 0xfb, 0xea,
            0xa7, 0x22, 0x25, 0x2b, 0x1b, 0x2d, 0xf6, 0xe3, 0xd2, 0x07,
            0x1d, 0x0b, 0x24, 0xc4, 0x15, 0x39, 0x38, 0x29, 0xc4, 0x03,
            0x09, 0x18, 0x0b, 0xe4, 0xf7, 0xf4, 0x1b, 0x29, 0x38, 0xf2,
            0xd9, 0xe1, 0x00, 0x26, 0x07, 0x14, 0x02, 0x7f, 0x19, 0xe6,
            0x39, 0x17, 0x0e, 0x39, 0x36, 0xf2, 0x7a, 0xd6, 0x05, 0x79,
            0x56, 0x06, 0x07, 0xf6, 0xfd, 0xbd, 0x16, 0xfa, 0x78, 0x49,
            0xfe, 0x39, 0x26, 0x0a, 0xb8, 0x49, 0x06, 0x39, 0x15, 0x0e,
            0xc5, 0xf4, 0xc9, 0xf8, 0x99, 0xd5, 0x05, 0xf4, 0x05, 0x46,
            0x06, 0xe6, 0x07, 0xd6, 0x09, 0xf9, 0x06, 0xfa, 0x83, 0x09,
            0xfe, 0x46, 0xd6, 0x05, 0x39, 0x14, 0xfe, 0x45, 0x26, 0xde,
            0x7b, 0xe6, 0xf9, 0x78, 0x46, 0x06, 0x02, 0x16, 0x37, 0xd7,
            0xfa, 0xe6, 0x29, 0x22, 0x29, 0x16, 0x18, 0xb6, 0xd4, 0x26,
            0x04, 0xfd, 0xe7, 0x07, 0x53, 0x04, 0x29, 0x0b, 0xe8, 0xf9,
            0xf7, 0x29, 0x00, 0x0e, 0x0f, 0x15, 0xfa, 0x87, 0x79, 0xd5,
            0x05, 0xf6, 0xfd, 0xc4, 0xc6, 0x0d, 0x86, 0x16, 0xfe, 0x46,
            0x29, 0x06, 0x02, 0x0e, 0x08, 0xf9, 0xf9, 0x18, 0x13, 0x46,
            0x03, 0x1a, 0xb8, 0x0a, 0xe4, 0x57, 0x00, 0x0e, 0x87, 0xf7,
            0x05, 0x07, 0x06, 0xda, 0x86, 0x09, 0xf6, 0x42, 0x26, 0x16,
            0xc7, 0xc9, 0x15, 0xb9, 0xc9, 0x01, 0x02, 0x02, 0x02, 0xe9,
            0x22, 0xc9, 0x37, 0x29, 0x11, 0x07, 0x00, 0x06, 0x82, 0x78,
            0x6d, 0x29, 0x99, 0x13, 0x0c, 0x86, 0xf7, 0x04, 0x08, 0x06,
            0x5a, 0xf9, 0x02, 0x05, 0xfa, 0x0a, 0x16, 0x05, 0x06, 0x00,
            0x36, 0xc2, 0x27, 0x02, 0x06, 0xb6, 0xe1, 0x87, 0x19, 0xfe,
            0x84, 0xf7, 0x2d, 0x8c, 0xc6, 0xed, 0x06, 0x68, 0xfd, 0x83,
            0xe7, 0x0d, 0x79, 0xe6, 0xd9, 0xc5, 0xe9, 0xf9, 0xc4, 0xd7,
            0xfd, 0x06, 0xe6, 0xf1, 0x85, 0x29, 0xfa, 0x06, 0xd7, 0x15,
            0xba, 0x16, 0xfe, 0x05, 0x26, 0x02, 0x05, 0xd6, 0x35, 0x84,
            0xc6, 0xfd, 0x07, 0xeb, 0xfd, 0x47, 0xd6, 0x0d, 0x04, 0xb6,
            0x22, 0xc7, 0xd8, 0x01, 0xbe, 0x1b, 0xfa, 0x07, 0x79, 0x09,
            0x79, 0x17, 0x0e, 0xca, 0x28, 0xfe, 0x04, 0xa6, 0x05, 0xf8,
            0xe9, 0xfd, 0x05, 0xf6, 0xf1, 0x44, 0x07, 0x16, 0x85, 0x06,
            0xf2, 0xf8, 0xf9, 0x05, 0xb9, 0x76, 0x2e, 0x44, 0xe6, 0x01,
            0xf1, 0xfb, 0x01, 0xc4, 0xe9, 0xfd, 0xf9, 0x09, 0xfe, 0x02,
            0x0e, 0xf4, 0x09, 0x37, 0x19, 0x25, 0xcb, 0x07, 0xf6, 0x05,
            0xe9, 0x36, 0x16, 0x00, 0x16, 0xb9, 0xe6, 0xfd, 0x46, 0x26,
            0x2a, 0x39, 0x07, 0xf2, 0xf9, 0x3b, 0xfe, 0x78, 0x26, 0xf2,
            0xf9, 0x09, 0xfa, 0xc6, 0x39, 0xfa, 0xb9, 0xf6, 0x01, 0x7b,
            0x26, 0x0e, 0x06, 0xf6, 0x1d, 0x46, 0xe9, 0x05, 0xc4, 0x2b,
            0x0a, 0x05, 0x0e, 0xcf, 0x51, 0x3e, 0x79, 0xba, 0x0e, 0xfe,
            0x6d, 0x13, 0x02, 0x0e, 0x17, 0xf0, 0x05, 0xfb, 0xeb, 0xd8,
            0x25, 0x09, 0x06, 0x0b, 0x14, 0x07, 0x00, 0x0e, 0x38, 0xf9,
            0x01, 0x43, 0xf6, 0x09, 0x86, 0x86, 0x05, 0x05, 0x36, 0xf6,
            0x0e, 0xf6, 0x05, 0xf8, 0xc9, 0xf9, 0x02, 0x1e, 0x12, 0x36,
            0x05, 0x1a, 0x08, 0xeb, 0x12, 0xc4, 0x17, 0xf9, 0xf4, 0x26,
            0xf9, 0x69, 0xf7, 0x37, 0xb6, 0x0d, 0xda, 0x76, 0x17, 0x14,
            0xb7, 0x08, 0x02, 0x69, 0xe6, 0xe9, 0x97, 0xf4, 0x04, 0x46,
            0x09, 0x29, 0xb4, 0x19, 0x00, 0x02, 0x3b, 0xf6, 0x1d, 0x42,
            0x36, 0x02, 0xc7, 0xab, 0xf9, 0x10, 0x07, 0x00, 0xc4, 0x09,
            0xc4, 0x12, 0x36, 0x99, 0x13, 0x0c, 0x86, 0xea, 0x04, 0x0d,
            0x06, 0x5f, 0xf9, 0x02, 0x2d, 0x13, 0x28, 0x09, 0x49, 0xe0,
            0x14, 0xe4, 0x1b, 0xe9, 0x2f, 0x39, 0x1b, 0xe5, 0xd6, 0x04,
            0x58, 0x08, 0x09, 0xc4, 0xf5, 0x14, 0x0b, 0x09, 0x08, 0x07,
            0x69, 0xf8, 0xf6, 0xd6, 0xd7, 0x12, 0x14, 0x19, 0xfa, 0xe9,
            0x24, 0x15, 0x27, 0x04, 0xf6, 0xc8, 0x19, 0x07, 0x17, 0xf7,
            0x18, 0x66, 0xf8, 0xf9, 0xe6, 0x25, 0x08, 0xf6, 0xec, 0x44,
            0x06, 0xe5, 0xeb, 0x17, 0x19, 0x17, 0xc7, 0xf9, 0xf7, 0x09,
            0x00, 0x36, 0x02, 0x16, 0xfe, 0xb9, 0xf6, 0x21, 0x42, 0x39,
            0xfa, 0xf8, 0xdb, 0x29, 0x06, 0x56, 0x1e, 0xb9, 0x19, 0xf2,
            0x7c, 0x18, 0xf2, 0xf9, 0x26, 0x2e, 0x78, 0xc6, 0xf9, 0x38,
            0x38, 0xfe, 0x07, 0x36, 0x1e, 0xfa, 0x39, 0x02, 0x78, 0x28,
            0x02, 0x78, 0x56, 0x12, 0x46, 0x26, 0xfa, 0xfa, 0x08, 0x06,
            0x3b, 0x56, 0x0e, 0xc7, 0xc4, 0x06, 0xba, 0xf9, 0xdd, 0xff,
            0x79, 0xfa, 0x46, 0xf9, 0x05, 0xbc, 0x16, 0x0e, 0x86, 0x59,
            0x06, 0x87, 0x66, 0xfa, 0x78, 0x16, 0xee, 0x7f, 0x26, 0x06,
            0x87, 0xf9, 0xf1, 0xfe, 0xf8, 0x11, 0xb9, 0x77, 0x0e, 0x07,
            0x16, 0xfe, 0xbb, 0xd6, 0xf9, 0x39, 0xf6, 0x05, 0xf8, 0x49,
            0xfa, 0x4c, 0x54, 0x02, 0x38, 0x76, 0xc9, 0xb8, 0x26, 0x0e,
            0x02, 0x36, 0x09, 0xe6, 0xda, 0x47, 0x06, 0x22, 0xb8, 0x14,
            0xd9, 0x14, 0x17, 0x2a, 0x35, 0xe6, 0x02, 0xdb, 0xf8, 0x17,
            0x12, 0x29, 0x08, 0xfb, 0xb6, 0x14, 0x36, 0x17, 0x2a, 0xf2,
            0x38, 0xe4, 0xea, 0xd6, 0x06, 0x26, 0x27, 0xe6, 0xd6, 0xe6,
            0x0b, 0x16, 0x34, 0x11, 0x29, 0xe8, 0x1b, 0xf6, 0x36, 0x29,
            0x39, 0x39, 0xc7, 0xd9, 0xb9, 0x34, 0x14, 0x26, 0x09, 0x16,
            0x19, 0xc6, 0xf4, 0xb4, 0x5a, 0x3d, 0x49, 0xf0, 0xe5, 0xd7,
            0xfb, 0x35, 0x58, 0x23, 0x00, 0x02, 0x44, 0x06, 0x2e, 0x44,
            0xf6, 0xf1, 0xf8, 0xad, 0xfd, 0x11, 0x07, 0x00, 0x7d, 0xe8,
            0x7a, 0xbc, 0x36, 0x99, 0x13, 0x0c, 0x86, 0xe9, 0x04, 0x15,
            0x06, 0x51, 0xf9, 0x00, 0x0d, 0x47, 0x18, 0xf6, 0xba, 0x36,
            0x26, 0xc6, 0x37, 0x06, 0x78, 0xf9, 0xf1, 0x46, 0x86, 0x12,
            0x06, 0xd7, 0xfd, 0x71, 0xf8, 0xe9, 0x85, 0x76, 0x06, 0x04,
            0x02, 0x16, 0xf9, 0xa9, 0xcb, 0xe6, 0x75, 0x54, 0x1b, 0x98,
            0xd4, 0x13, 0x67, 0x2b, 0x16, 0xb6, 0xe5, 0xcb, 0x38, 0x36,
            0x14, 0xe7, 0xdb, 0x39, 0x09, 0x23, 0x00, 0x0e, 0x38, 0x26,
            0x0e, 0xba, 0xe6, 0xf9, 0x39, 0x86, 0xf2, 0x84, 0x06, 0xf6,
            0x70, 0x36, 0x06, 0xb9, 0x46, 0xfa, 0x02, 0x16, 0xf6, 0x08,
            0x1b, 0xe9, 0x04, 0x08, 0x24, 0x09, 0xf0, 0x3b, 0xe8, 0x2a,
            0x07, 0xf9, 0x08, 0xe6, 0xf6, 0x05, 0xe5, 0x27, 0x06, 0x4a,
            0xf4, 0xf8, 0x00, 0x0e, 0xc7, 0x09, 0x16, 0x07, 0x16, 0xfe,
            0xc6, 0x39, 0x02, 0x07, 0x24, 0xfa, 0xfa, 0xc6, 0xed, 0xb8,
            0x26, 0xfa, 0x02, 0x16, 0x07, 0xe7, 0x1b, 0x19, 0x1a, 0xf6,
            0x12, 0x29, 0x16, 0xe8, 0xe6, 0x16, 0xf6, 0x09, 0x14, 0x24,
            0xc4, 0xf8, 0x1b, 0x48, 0x09, 0xf4, 0x16, 0xe7, 0x00, 0x0e,
            0xc6, 0xf6, 0xf5, 0xc4, 0x16, 0x02, 0x87, 0x06, 0xfe, 0xb9,
            0xe9, 0x25, 0x05, 0x06, 0xfa, 0x82, 0x8b, 0x05, 0x02, 0x1e,
            0x47, 0x18, 0x05, 0xfb, 0xf9, 0x08, 0xc9, 0x27, 0xf2, 0x20,
            0xe2, 0x08, 0x26, 0x0b, 0x1a, 0xcc, 0x25, 0xc2, 0x62, 0xd8,
            0x19, 0xd2, 0x17, 0x06, 0x06, 0x08, 0x26, 0xdf, 0x16, 0x07,
            0x47, 0x24, 0x06, 0xa1, 0xc9, 0x26, 0x00, 0x0e, 0x84, 0x16,
            0x0a, 0x87, 0x69, 0x01, 0x39, 0x36, 0x0e, 0x83, 0x29, 0x0e,
            0xf9, 0xd9, 0xf5, 0xbb, 0x16, 0x06, 0x02, 0x1f, 0xf4, 0x17,
            0x1b, 0x0c, 0xc6, 0xf5, 0x52, 0xe5, 0xd8, 0xfb, 0x3a, 0x49,
            0x27, 0xe6, 0xd6, 0xe8, 0x45, 0xf7, 0x01, 0xd7, 0x28, 0x1f,
            0x0b, 0xc2, 0xf4, 0x45, 0x1a, 0x2a, 0xf6, 0x17, 0xf9, 0x2b,
            0x14, 0x18, 0x02, 0xbc, 0xf7, 0x06, 0x11, 0x07, 0x00, 0x7c,
            0x4b, 0xc2, 0x49, 0x37, 0x99, 0x13, 0x0c, 0x86, 0xe9, 0x04,
            0x0d, 0x06, 0x5d, 0xf9, 0x02, 0x00, 0x27, 0x38, 0x04, 0x09,
            0x12, 0xf7, 0xb3, 0x3b, 0xf3, 0x00, 0x0e, 0xba, 0x17, 0xe6,
            0xbc, 0xf6, 0xf9, 0x47, 0x09, 0xfa, 0x85, 0xe9, 0x01, 0xc7,
            0x39, 0x06, 0x86, 0x16, 0x06, 0x02, 0x0e, 0x2b, 0xd6, 0x1b,
            0xb7, 0xf9, 0x07, 0x59, 0x17, 0x28, 0xe6, 0x39, 0xd5, 0x00,
            0x0e, 0xc3, 0x49, 0xfa, 0x84, 0xd6, 0xf9, 0x06, 0xb9, 0xf1,
            0x06, 0xf7, 0x09, 0x8e, 0x16, 0x06, 0x7b, 0x76, 0xf9, 0x02,
            0x0e, 0xd9, 0xe5, 0x15, 0x1b, 0x2b, 0xf8, 0x23, 0xf6, 0x30,
            0x0b, 0x05, 0xca, 0x00, 0x0e, 0x46, 0xf9, 0x0d, 0x00, 0x06,
            0x0e, 0x04, 0x96, 0xf9, 0x0b, 0xe7, 0xf1, 0xc2, 0x26, 0xf5,
            0x46, 0xd9, 0x05, 0x02, 0x0e, 0x02, 0x39, 0xf4, 0xdb, 0x19,
            0x0d, 0x36, 0xf7, 0x33, 0x04, 0xd6, 0xdb, 0x00, 0x1e, 0xbb,
            0x16, 0x36, 0x46, 0x06, 0x06, 0xf9, 0x1b, 0xf2, 0xc0, 0x08,
            0x26, 0x87, 0xb6, 0x09, 0xc6, 0x0b, 0x06, 0x39, 0x36, 0x12,
            0x78, 0x26, 0x0a, 0x85, 0x39, 0xfe, 0x3b, 0x09, 0x06, 0x38,
            0xf6, 0x22, 0xbb, 0xe9, 0x01, 0xf7, 0xeb, 0xf9, 0xc4, 0x29,
            0x0a, 0xc7, 0x09, 0x02, 0x86, 0x29, 0x02, 0x38, 0x26, 0x06,
            0xf9, 0x19, 0x02, 0x02, 0x1e, 0xe6, 0x39, 0x96, 0x19, 0xd7,
            0x58, 0xd7, 0x09, 0x05, 0x46, 0x06, 0xf6, 0xe4, 0x18, 0x16,
            0x19, 0x15, 0x17, 0xbb, 0xe9, 0x27, 0x61, 0xd6, 0xc9, 0xea,
            0x46, 0x26, 0x15, 0xe7, 0xc7, 0xe8, 0x22, 0x19, 0x1a, 0xe9,
            0x06, 0x00, 0x1e, 0xc2, 0xd9, 0x05, 0x87, 0xb9, 0x0d, 0x87,
            0x94, 0x02, 0x03, 0x16, 0xd6, 0x31, 0x16, 0x02, 0x06, 0x16,
            0xfa, 0x46, 0x49, 0xfa, 0x07, 0x16, 0x1e, 0x46, 0xa6, 0x0d,
            0x78, 0x09, 0x06, 0x79, 0xb6, 0x1a, 0x79, 0x16, 0xfe, 0x7e,
            0xd8, 0x05, 0x87, 0x19, 0x1a, 0x04, 0x66, 0x02, 0xbb, 0xf8,
            0xfd, 0xbd, 0x06, 0x0a, 0x47, 0xf6, 0xf5, 0x11, 0x07, 0x00,
            0x3e, 0x7b, 0x35, 0xe0, 0x37, 0x99, 0x13, 0x0c, 0x86, 0xe9,
            0x04, 0x08, 0x06, 0x5f, 0xf9, 0x02, 0x09, 0xe6, 0x1c, 0x24,
            0x26, 0xd0, 0x0a, 0x08, 0x45, 0xe7, 0x32, 0x3b, 0x18, 0xf5,
            0x19, 0x05, 0xfc, 0xb4, 0x18, 0x17, 0x5a, 0xeb, 0x06, 0x00,
            0x00, 0x26, 0x7c, 0xe6, 0xfd, 0x39, 0x86, 0x06, 0xc6, 0x26,
            0xf2, 0x7e, 0x26, 0x02, 0xbb, 0xe9, 0x0d, 0x84, 0x29, 0x0e,
            0x3b, 0xe6, 0x05, 0x06, 0xa6, 0x06, 0x46, 0xa5, 0x06, 0x31,
            0xf9, 0xd5, 0x71, 0x46, 0x1a, 0xc2, 0x36, 0xfe, 0x7b, 0xf9,
            0x05, 0x39, 0xd6, 0xf5, 0xf9, 0x09, 0x02, 0xb8, 0x19, 0x02,
            0x39, 0xd6, 0x32, 0x46, 0x16, 0xfa, 0x72, 0x0b, 0x06, 0x78,
            0x36, 0xfa, 0x39, 0x16, 0x02, 0x87, 0xd6, 0xf9, 0x07, 0xd6,
            0x01, 0x06, 0xf6, 0x05, 0x02, 0x16, 0xe4, 0xd2, 0xf7, 0x13,
            0x39, 0x39, 0xfd, 0xda, 0xf6, 0xf9, 0x12, 0xe4, 0xe4, 0x29,
            0xfd, 0x36, 0xeb, 0x23, 0xe4, 0xf5, 0x0a, 0x26, 0xf5, 0xe7,
            0x00, 0x0e, 0xc4, 0xc9, 0x35, 0x04, 0xd6, 0x05, 0xf9, 0x0b,
            0xfa, 0xf9, 0xf6, 0xf9, 0x46, 0x16, 0xea, 0x82, 0x16, 0xfa,
            0x02, 0x0e, 0x39, 0xe9, 0x34, 0xd4, 0x09, 0xda, 0x37, 0x07,
            0x27, 0x0b, 0xf4, 0x07, 0x00, 0x1e, 0x84, 0xf9, 0x15, 0x07,
            0x06, 0x0e, 0x39, 0x76, 0xfa, 0xb9, 0x29, 0xea, 0xb0, 0xf6,
            0x05, 0x38, 0x76, 0x0a, 0x03, 0xf6, 0x15, 0x3e, 0xe9, 0x15,
            0xc5, 0x59, 0xfa, 0x3a, 0xe9, 0x09, 0xbb, 0x16, 0x0e, 0x07,
            0x79, 0xfe, 0xc6, 0x19, 0x2e, 0xbf, 0x26, 0x06, 0xf8, 0x68,
            0xfa, 0x38, 0x36, 0xf2, 0x7e, 0x36, 0x02, 0xbb, 0x36, 0xfa,
            0x02, 0x0e, 0x38, 0xe2, 0xd8, 0x96, 0x58, 0x29, 0x5b, 0xa4,
            0xf6, 0x33, 0x29, 0x16, 0x00, 0x0e, 0xbb, 0xe9, 0x2d, 0x0c,
            0x36, 0xf6, 0x7b, 0x78, 0x15, 0xf8, 0x16, 0x0e, 0x06, 0xb9,
            0x15, 0x84, 0xf9, 0x01, 0x02, 0x0e, 0xe7, 0xc8, 0x1b, 0x02,
            0xd6, 0x15, 0xf9, 0x16, 0x16, 0x16, 0x06, 0xed, 0x11, 0x07,
            0x00, 0x3a, 0xbd, 0x4f, 0x7c, 0x34, 0x99, 0x13, 0x0c, 0x86,
            0xe9, 0x04, 0x0f, 0x06, 0x5d, 0xf9, 0x00, 0x09, 0x41, 0xf7,
            0x01, 0xc4, 0xb9, 0xf9, 0x44, 0xf9, 0xf9, 0x46, 0x16, 0x2a,
            0x04, 0xf6, 0xf9, 0xbb, 0xfb, 0x01, 0x06, 0x06, 0x06, 0xbb,
            0x09, 0x0e, 0xc2, 0x19, 0xfe, 0x04, 0xf9, 0xf9, 0xc6, 0x26,
            0x16, 0x3b, 0x02, 0x16, 0xf5, 0xc9, 0x15, 0xc6, 0xf4, 0x16,
            0x25, 0x39, 0xf7, 0x1a, 0xf2, 0xdb, 0xe6, 0x58, 0x17, 0x27,
            0x17, 0xe0, 0xf9, 0xb8, 0xfc, 0x06, 0xe5, 0x1a, 0x00, 0x26,
            0x46, 0xf6, 0x09, 0x82, 0xd6, 0xfd, 0xf8, 0x19, 0x0a, 0x05,
            0x27, 0x06, 0x7d, 0xa9, 0x22, 0x06, 0x06, 0xfa, 0x7f, 0x2b,
            0xfa, 0x47, 0x89, 0x05, 0x47, 0x17, 0x0e, 0x3b, 0x27, 0x06,
            0xc6, 0x49, 0xee, 0x7a, 0xf9, 0x05, 0xc6, 0x06, 0x02, 0x06,
            0x06, 0x06, 0x47, 0xe6, 0x0d, 0xc7, 0x07, 0x06, 0xc4, 0x19,
            0xd2, 0x46, 0x16, 0xfa, 0xc6, 0x17, 0xfa, 0x44, 0xf9, 0xed,
            0xc4, 0xf9, 0x09, 0x02, 0xe4, 0x05, 0xf8, 0xe9, 0xfd, 0x39,
            0xe6, 0x01, 0x02, 0x0e, 0xe9, 0xc9, 0xf4, 0x29, 0x26, 0x06,
            0x20, 0xd7, 0x3a, 0xec, 0x28, 0xe5, 0x00, 0x16, 0x85, 0x19,
            0xfa, 0x79, 0xe7, 0x01, 0x07, 0x06, 0xf2, 0x8f, 0xf6, 0x05,
            0x39, 0xa6, 0xf1, 0xc4, 0x09, 0xf2, 0x06, 0xf4, 0xf9, 0x45,
            0x16, 0xe2, 0xf9, 0xf6, 0x0d, 0x02, 0x26, 0x02, 0xbb, 0xa9,
            0x05, 0xc7, 0x29, 0xfe, 0x02, 0x0e, 0xf7, 0x09, 0x17, 0x1b,
            0x06, 0xe6, 0x13, 0x28, 0x37, 0xbb, 0xf4, 0x36, 0x00, 0x16,
            0x4f, 0xf7, 0x01, 0xc5, 0x48, 0x05, 0x46, 0xa6, 0x11, 0x83,
            0xc9, 0x05, 0x85, 0x09, 0x0a, 0x45, 0xf9, 0x09, 0xbd, 0xe9,
            0x05, 0xc7, 0xf9, 0xf9, 0xc4, 0x74, 0xfa, 0x85, 0x06, 0xde,
            0x70, 0x16, 0xfa, 0xc6, 0x39, 0xfa, 0x02, 0x08, 0xf9, 0x38,
            0x26, 0x1b, 0xe4, 0xf6, 0x27, 0x56, 0x39, 0x36, 0x0d, 0xc5,
            0xfa, 0xe4, 0x1b, 0x28, 0x37, 0xe6, 0xa4, 0xe9, 0x49, 0x11,
            0x07, 0x00, 0x00, 0xfa, 0x10, 0x15, 0x35, 0x99, 0x13, 0x0c,
            0x86, 0xf4, 0x04, 0x08, 0x06, 0x5c, 0xf9, 0x05, 0x07, 0x46,
            0x07, 0x02, 0x16, 0xe4, 0xe5, 0xf8, 0x18, 0xf9, 0x02, 0x39,
            0x37, 0xf9, 0x15, 0xf4, 0x18, 0xd8, 0x09, 0xe3, 0x17, 0xe6,
            0x4b, 0x1b, 0x3b, 0x29, 0xe2, 0xd5, 0xbb, 0x00, 0x16, 0xf8,
            0x16, 0x02, 0x83, 0xf6, 0xf1, 0xb9, 0xf6, 0xf9, 0x86, 0xf6,
            0xfd, 0x04, 0xa6, 0x16, 0x45, 0xc6, 0xf9, 0xb3, 0xe8, 0xf1,
            0x02, 0x16, 0x06, 0x44, 0xb6, 0xf9, 0x44, 0xf9, 0x0d, 0x01,
            0xd6, 0x11, 0x06, 0xb6, 0x09, 0x02, 0x0e, 0xc7, 0x19, 0xe5,
            0x08, 0xe6, 0x0d, 0x34, 0x26, 0xe4, 0x05, 0xd9, 0x36, 0x00,
            0x0e, 0x06, 0xf6, 0x25, 0x07, 0xd6, 0x01, 0x06, 0xb8, 0x0d,
            0x4e, 0x26, 0x2e, 0xc2, 0xb8, 0x05, 0xf8, 0xdb, 0x0d, 0x02,
            0x0e, 0xb9, 0x79, 0x05, 0x0b, 0x96, 0x09, 0x5b, 0x76, 0x2b,
            0x05, 0xb6, 0x13, 0x00, 0x0e, 0x79, 0x19, 0xfe, 0x38, 0x46,
            0xfe, 0x3b, 0xb6, 0x0a, 0xc6, 0x29, 0x16, 0x3e, 0x29, 0x02,
            0xc4, 0x08, 0x16, 0x02, 0x16, 0x26, 0xef, 0xd4, 0xf8, 0xf6,
            0x59, 0xe4, 0x65, 0xc6, 0xf7, 0xb6, 0x26, 0x29, 0x09, 0x16,
            0x07, 0xf7, 0x0d, 0x38, 0x16, 0xd3, 0xe6, 0xf9, 0x29, 0x05,
            0x0e, 0x07, 0x5a, 0x41, 0x11, 0x80, 0xc1, 0x31, 0x16, 0x5b,
            0x00, 0x16, 0xc6, 0xc9, 0x0d, 0xc4, 0x59, 0x0a, 0xc5, 0x77,
            0xfa, 0x3f, 0x29, 0xda, 0xbe, 0xf6, 0x0d, 0x39, 0x26, 0xfe,
            0x02, 0x16, 0x06, 0x46, 0xf6, 0x0d, 0xf9, 0xe6, 0x05, 0x46,
            0x19, 0xf2, 0x42, 0x36, 0x26, 0xfa, 0xa9, 0x05, 0x02, 0x0e,
            0x9d, 0x04, 0xe2, 0xe7, 0x08, 0xfb, 0x12, 0x24, 0x45, 0x6a,
            0x08, 0xd8, 0x00, 0x16, 0x8d, 0x06, 0x02, 0xc7, 0x06, 0xe9,
            0x45, 0x29, 0xfe, 0x43, 0xf9, 0x09, 0x81, 0x26, 0x1e, 0x38,
            0x26, 0xf2, 0xbb, 0x2b, 0x02, 0xb1, 0x29, 0x12, 0x47, 0xd9,
            0xfd, 0xf8, 0x09, 0x0a, 0x87, 0x37, 0x0e, 0xc7, 0x09, 0xf6,
            0x13, 0x07, 0x00, 0xb4, 0xeb, 0x27, 0xa6, 0x35, 0x99, 0x13,
            0x0c, 0x86, 0xf1, 0x04, 0x09, 0x06, 0x51, 0xf9, 0x00, 0x01,
            0xc4, 0x37, 0x06, 0x7b, 0xe6, 0xe1, 0x79, 0xfb, 0xf5, 0xc7,
            0x26, 0x26, 0xc5, 0xf6, 0xf5, 0x39, 0x02, 0x0e, 0xeb, 0x58,
            0x13, 0x18, 0xa9, 0xf9, 0x17, 0x16, 0xfd, 0xe5, 0x05, 0x25,
            0x00, 0x0e, 0x00, 0x07, 0x06, 0x46, 0x76, 0xf5, 0x3a, 0x36,
            0xfa, 0x07, 0x06, 0x0e, 0x3b, 0x06, 0xfe, 0x86, 0x18, 0x0a,
            0x02, 0x0e, 0x02, 0x07, 0x12, 0xe8, 0x29, 0xba, 0x37, 0x37,
            0x27, 0xfc, 0xd2, 0x16, 0x00, 0x16, 0x05, 0xd6, 0x01, 0x44,
            0xd6, 0xf9, 0x47, 0x16, 0xfa, 0x04, 0x06, 0x2e, 0x0c, 0xd6,
            0x05, 0xf8, 0x7b, 0x05, 0x44, 0x16, 0x1a, 0x39, 0x36, 0xfe,
            0xc7, 0xda, 0x01, 0x86, 0xd6, 0x09, 0xc2, 0x09, 0xfa, 0x38,
            0xe9, 0x05, 0x05, 0x0e, 0x87, 0xa2, 0xe5, 0xf7, 0x25, 0xfb,
            0xc6, 0x17, 0x06, 0x00, 0x46, 0xc7, 0x09, 0x0e, 0x78, 0x86,
            0x36, 0x38, 0x26, 0x06, 0x3c, 0x3b, 0x06, 0xc7, 0xe9, 0x01,
            0x44, 0xc9, 0x05, 0x06, 0xc9, 0x25, 0x05, 0x69, 0x16, 0x04,
            0x59, 0x16, 0xbd, 0xf9, 0x11, 0x3f, 0xf9, 0x05, 0x87, 0x88,
            0x0a, 0x39, 0x16, 0x02, 0xb1, 0x16, 0xfa, 0xc7, 0x99, 0xfe,
            0xb9, 0xe6, 0xf9, 0xb1, 0x26, 0xf2, 0xb9, 0x49, 0xf2, 0x86,
            0x06, 0x06, 0x79, 0x16, 0x02, 0x38, 0xf6, 0x05, 0xc4, 0x29,
            0x22, 0x79, 0xf6, 0x0d, 0xc7, 0x38, 0xfe, 0x06, 0x39, 0xee,
            0xb8, 0xf6, 0x01, 0xb8, 0xe6, 0xf9, 0xf9, 0xe9, 0x01, 0x07,
            0xf6, 0x09, 0x47, 0xe4, 0xf5, 0xf9, 0x09, 0xe6, 0xc4, 0x16,
            0x02, 0xc5, 0x36, 0xfa, 0x47, 0xb9, 0xf9, 0xce, 0x46, 0x12,
            0xc7, 0xa4, 0xf1, 0x4f, 0xe6, 0xe1, 0xba, 0x26, 0xf1, 0xc5,
            0x19, 0x0e, 0xf8, 0xf9, 0xfd, 0xc6, 0xe9, 0xf1, 0x39, 0x17,
            0x06, 0x4d, 0x05, 0xf6, 0x7b, 0x66, 0xd5, 0xc7, 0x36, 0xfe,
            0x46, 0x06, 0xf2, 0x79, 0x76, 0x06, 0x46, 0x25, 0xe2, 0x12,
            0x07, 0x00, 0xc2, 0x13, 0x99, 0x30, 0x32, 0x99, 0x13, 0x0c,
            0x86, 0x06, 0x05, 0x16, 0x06, 0x55, 0xf9, 0x00, 0x39, 0x31,
            0x66, 0x26, 0xf8, 0x19, 0x02, 0xf9, 0x38, 0xfa, 0x0a, 0xd6,
            0xe9, 0x39, 0x77, 0x05, 0x05, 0x07, 0xfe, 0xfd, 0x38, 0x02,
            0xf9, 0xc6, 0x0a, 0xfa, 0xf9, 0xf5, 0x70, 0x19, 0x26, 0xc4,
            0xa9, 0x12, 0x87, 0xfb, 0xfd, 0xe9, 0x29, 0x22, 0x87, 0xa6,
            0x06, 0x3d, 0x1b, 0x0e, 0x86, 0x46, 0x3e, 0x78, 0xb9, 0xfd,
            0x7b, 0x48, 0x0e, 0x84, 0x09, 0xf6, 0x7a, 0x26, 0x02, 0x86,
            0x24, 0xfa, 0xbc, 0x46, 0xda, 0x3b, 0xc6, 0xf1, 0xf9, 0x39,
            0x0e, 0xb8, 0xd9, 0x05, 0xfb, 0x06, 0x06, 0x84, 0x89, 0xfe,
            0x85, 0xe6, 0x1d, 0x3e, 0xc6, 0x21, 0xf9, 0x78, 0xfa, 0x84,
            0x0b, 0x02, 0xbc, 0x06, 0x02, 0x85, 0xf6, 0xf1, 0x39, 0xf6,
            0xf1, 0xb9, 0x16, 0xfa, 0x39, 0x57, 0x06, 0x87, 0xe9, 0xf9,
            0x79, 0x26, 0x0e, 0xf9, 0x29, 0x06, 0x38, 0x36, 0xf6, 0xf8,
            0x09, 0x2a, 0x78, 0xe4, 0x05, 0x44, 0x0b, 0xe6, 0x87, 0xf6,
            0x01, 0x46, 0xf9, 0xe9, 0xbb, 0x39, 0x02, 0x85, 0x36, 0x16,
            0x06, 0x02, 0x0e, 0xe0, 0xe4, 0xaa, 0x18, 0x39, 0x45, 0xe4,
            0xf6, 0xf9, 0x1b, 0x08, 0x0a, 0x00, 0x0e, 0x38, 0x26, 0xfa,
            0x45, 0xf6, 0x05, 0x46, 0x16, 0x02, 0x0d, 0x04, 0x02, 0xbd,
            0x76, 0xe5, 0xc6, 0x06, 0xfe, 0x02, 0x2e, 0x26, 0xc7, 0xd4,
            0xd9, 0x17, 0x16, 0x02, 0x19, 0xe5, 0xe9, 0xe6, 0x38, 0x49,
            0x07, 0x05, 0x09, 0xe9, 0x3b, 0x26, 0x46, 0xe4, 0xe9, 0xe6,
            0x36, 0xdb, 0x26, 0xc9, 0x34, 0x09, 0x06, 0xd7, 0x18, 0x44,
            0x18, 0xe4, 0xd8, 0x15, 0x06, 0xf3, 0x1a, 0x18, 0x0c, 0xd5,
            0x06, 0x20, 0x37, 0xe6, 0x4a, 0xf7, 0x38, 0xe5, 0x1a, 0xc4,
            0xe8, 0xf7, 0x29, 0x25, 0x05, 0xeb, 0xfb, 0x00, 0x0e, 0x06,
            0x26, 0x16, 0xb9, 0xf6, 0xf1, 0xc6, 0x28, 0x02, 0x4a, 0xe4,
            0x1d, 0x84, 0x89, 0xed, 0x02, 0xf9, 0x15, 0x11, 0x07, 0x00,
            0x21, 0x41, 0xc1, 0xe3, 0x32, 0x99, 0x13, 0x0c, 0x86, 0xf7,
            0x04, 0x09, 0x06, 0x5d, 0xf9, 0x02, 0x29, 0xe8, 0x4b, 0x37,
            0x17, 0xc9, 0xc8, 0x09, 0xf6, 0x64, 0x13, 0x56, 0xc7, 0xf3,
            0xe5, 0xf5, 0xdd, 0xc9, 0x1a, 0x15, 0x08, 0x05, 0x1a, 0x05,
            0x08, 0x72, 0x0a, 0xf7, 0x9f, 0x37, 0xe6, 0x19, 0x04, 0x37,
            0xc4, 0xbb, 0xf9, 0xf8, 0x24, 0xe8, 0x12, 0xc6, 0x37, 0x36,
            0x66, 0x0b, 0xf9, 0xa9, 0xe4, 0xe9, 0x77, 0xf7, 0x46, 0x27,
            0x37, 0xe7, 0xb6, 0xed, 0x1b, 0x26, 0x15, 0xe0, 0xf4, 0xf9,
            0x1b, 0xe8, 0x13, 0xe9, 0x67, 0x1d, 0x36, 0x09, 0x00, 0x26,
            0x7b, 0xe9, 0xf9, 0xc6, 0xf9, 0x15, 0x86, 0x19, 0x02, 0x38,
            0x29, 0x16, 0xc7, 0xe6, 0x16, 0x86, 0xc9, 0xfd, 0x73, 0xf6,
            0x01, 0xc5, 0x89, 0x0e, 0xc7, 0xa9, 0x01, 0x3c, 0xf9, 0x05,
            0xc3, 0xc9, 0x1d, 0x06, 0xf6, 0x01, 0x44, 0x08, 0x06, 0x04,
            0xc9, 0x21, 0xc6, 0xd6, 0x0d, 0xc7, 0x28, 0xfe, 0x84, 0x56,
            0x06, 0x38, 0x07, 0xfa, 0xbe, 0x29, 0xfa, 0xba, 0x49, 0x0e,
            0x79, 0x16, 0x06, 0x79, 0x09, 0x06, 0x84, 0x36, 0x02, 0xbb,
            0xf6, 0xf9, 0x02, 0x0e, 0x1a, 0xf4, 0x37, 0x02, 0xf6, 0x44,
            0xeb, 0xf9, 0xc6, 0x03, 0x26, 0x37, 0x00, 0x0e, 0x7e, 0x06,
            0xfe, 0xfa, 0x99, 0x06, 0xb8, 0x39, 0xfe, 0xff, 0x06, 0x0a,
            0x78, 0x66, 0x06, 0x44, 0x46, 0xfa, 0x02, 0x33, 0xb8, 0x99,
            0xfa, 0xf6, 0x19, 0x44, 0x1a, 0x24, 0x0b, 0x27, 0x19, 0xe7,
            0x26, 0xf7, 0xf4, 0xd7, 0xe9, 0x08, 0x53, 0xc9, 0x27, 0xcd,
            0x3b, 0x06, 0x04, 0xe7, 0x29, 0xf6, 0x22, 0xf7, 0x04, 0xe9,
            0x19, 0x04, 0x35, 0xe6, 0xfb, 0xec, 0x1b, 0x46, 0x16, 0xf2,
            0xe2, 0x16, 0x56, 0xf7, 0x96, 0xd8, 0x49, 0x19, 0xf4, 0x36,
            0x44, 0x0b, 0xe4, 0xe9, 0x17, 0x08, 0xf6, 0x24, 0xc8, 0xf7,
            0xdb, 0x12, 0x27, 0xe5, 0xe9, 0xe9, 0x47, 0xe8, 0x0b, 0x07,
            0x47, 0x2b, 0x1a, 0xe8, 0xc4, 0x11, 0x1b, 0x09, 0x10, 0x07,
            0x00, 0xa2, 0xd4, 0x75, 0x82, 0x33, 0x99, 0x13, 0x0c, 0x86,
            0xeb, 0x04, 0x08, 0x06, 0x5d, 0xf9, 0x02, 0x0c, 0xf0, 0xa7,
            0xe2, 0x03, 0xd8, 0x0b, 0xc9, 0x77, 0xe5, 0x3a, 0xc6, 0x1b,
            0x35, 0x35, 0xe2, 0x00, 0x26, 0x79, 0xf9, 0xe5, 0x7a, 0x36,
            0x02, 0x46, 0x34, 0x0e, 0x44, 0x06, 0xf6, 0x07, 0x46, 0x1a,
            0xb8, 0xd7, 0xfd, 0xf9, 0x2b, 0xe6, 0xf8, 0x99, 0x0d, 0x07,
            0x16, 0x16, 0x86, 0xd6, 0x01, 0x7b, 0x19, 0xf6, 0x86, 0x67,
            0x02, 0x47, 0xe6, 0xd9, 0xbb, 0x09, 0x0e, 0x03, 0xe4, 0x01,
            0x82, 0xd9, 0xe1, 0x44, 0x26, 0x26, 0x45, 0xf7, 0xf9, 0x3d,
            0xf8, 0x05, 0x06, 0xb6, 0x01, 0x84, 0xe9, 0x01, 0x84, 0xe6,
            0x05, 0x05, 0x16, 0xfe, 0x46, 0x39, 0x0e, 0x02, 0x2e, 0x27,
            0x19, 0x1b, 0xb4, 0xec, 0xe6, 0x0b, 0x24, 0x16, 0xf6, 0x03,
            0xf6, 0x26, 0x2b, 0x16, 0x1a, 0x15, 0xe6, 0x07, 0x49, 0x17,
            0xf9, 0xd4, 0x19, 0xf4, 0x19, 0x08, 0x49, 0xf9, 0xe8, 0x17,
            0x27, 0xe4, 0xf8, 0xd6, 0xe8, 0x16, 0xd6, 0x55, 0xf4, 0x26,
            0xd6, 0x07, 0x13, 0x17, 0xe5, 0x19, 0xca, 0x1d, 0x09, 0x26,
            0x19, 0xdb, 0xd4, 0x29, 0x09, 0x46, 0x37, 0x22, 0x06, 0x00,
            0x0e, 0x44, 0xd9, 0xfd, 0x86, 0x19, 0xfe, 0x05, 0x86, 0x0a,
            0x46, 0xd7, 0x09, 0xbe, 0x09, 0xe2, 0xc4, 0xf8, 0x09, 0x02,
            0x16, 0x36, 0x16, 0xe7, 0x32, 0x29, 0x28, 0x27, 0x04, 0xc4,
            0xc9, 0xf9, 0x26, 0x04, 0x06, 0xe9, 0xec, 0xb9, 0x27, 0x01,
            0x44, 0xf7, 0xda, 0xf6, 0xe1, 0x00, 0x16, 0x85, 0x06, 0xfe,
            0xf0, 0xf6, 0x01, 0x86, 0xf6, 0x0d, 0x80, 0x09, 0x16, 0x44,
            0x89, 0x09, 0xbb, 0x08, 0xfa, 0x02, 0x06, 0xfa, 0xc6, 0xa6,
            0xf9, 0xc4, 0xe6, 0xf5, 0x8e, 0xe9, 0xf9, 0x87, 0xc6, 0x09,
            0x46, 0x26, 0xfe, 0x02, 0x0e, 0xf4, 0xf7, 0x04, 0x0b, 0xd5,
            0x0b, 0x12, 0x26, 0x25, 0x15, 0xcb, 0xfd, 0x00, 0x02, 0x04,
            0x46, 0x12, 0xc5, 0xb6, 0xfd, 0xfb, 0x95, 0xf2, 0x10, 0x07,
            0x00, 0x3a, 0xf2, 0xad, 0x20, 0x30, 0x99, 0x13, 0x0c, 0x86,
            0x06, 0x05, 0x1c, 0x06, 0x5a, 0xf9, 0x00, 0x05, 0x75, 0x0b,
            0x06, 0x39, 0xc9, 0x0d, 0x04, 0x02, 0x16, 0xf3, 0x22, 0x17,
            0xfa, 0x08, 0xab, 0xfb, 0xdb, 0x06, 0x16, 0x35, 0x05, 0x16,
            0x25, 0xe8, 0x12, 0xe7, 0x09, 0xc8, 0xfa, 0x34, 0x17, 0xd6,
            0x17, 0x00, 0x0e, 0x07, 0x15, 0x02, 0xbb, 0xc9, 0xd1, 0xb9,
            0x09, 0x0a, 0xc4, 0xf6, 0x09, 0x86, 0xf9, 0xf9, 0x06, 0x16,
            0x0e, 0x02, 0x2e, 0x05, 0x17, 0x15, 0xeb, 0x59, 0xcd, 0x34,
            0xc4, 0x29, 0xeb, 0xe9, 0x16, 0xe6, 0x08, 0x00, 0x16, 0x19,
            0xfa, 0xf2, 0x34, 0x16, 0x4d, 0xd4, 0xf7, 0xc4, 0x19, 0x22,
            0x26, 0xf7, 0xad, 0xe8, 0x48, 0x13, 0x09, 0xe4, 0x1d, 0x26,
            0x39, 0x25, 0xd9, 0xe6, 0xd9, 0x35, 0x55, 0x27, 0xc8, 0x98,
            0xfa, 0x46, 0x76, 0x07, 0xd7, 0x96, 0xf2, 0x06, 0x39, 0x69,
            0x07, 0xd6, 0xc7, 0x00, 0x0e, 0x97, 0xe4, 0x21, 0x38, 0x06,
            0xd9, 0x78, 0x2b, 0x16, 0x07, 0x36, 0x2e, 0xc1, 0x19, 0xfe,
            0x07, 0x98, 0x01, 0x02, 0x0e, 0x29, 0xe9, 0xe8, 0xf4, 0xe8,
            0x06, 0x39, 0x07, 0xf4, 0xd4, 0x0a, 0x39, 0x00, 0x0e, 0xf8,
            0x19, 0x0a, 0x79, 0xf6, 0x09, 0xc4, 0x07, 0xfa, 0x07, 0xe6,
            0xe5, 0xf9, 0x29, 0xfa, 0x05, 0x16, 0x02, 0x02, 0x16, 0x0b,
            0xeb, 0x14, 0x04, 0x32, 0x18, 0x0b, 0xe9, 0xf4, 0x00, 0xdb,
            0xf9, 0xef, 0xf6, 0x27, 0x15, 0x26, 0x27, 0xf5, 0x04, 0xc8,
            0xf8, 0x39, 0x35, 0x00, 0x0e, 0x07, 0xe6, 0x05, 0x38, 0xb9,
            0x2a, 0x87, 0x18, 0x1a, 0xb5, 0x9b, 0x09, 0x46, 0x46, 0x02,
            0xc5, 0x46, 0xfa, 0x02, 0x0e, 0xf4, 0xc7, 0x18, 0x4b, 0xe6,
            0xf8, 0xd7, 0x48, 0xd2, 0x26, 0xc7, 0x26, 0x00, 0x0e, 0x84,
            0x09, 0x0a, 0x7d, 0xb9, 0x1d, 0xb9, 0x16, 0x06, 0x86, 0x1b,
            0xfa, 0xc4, 0x16, 0x12, 0xc7, 0xe9, 0xf9, 0x02, 0x00, 0xe7,
            0x19, 0x36, 0x34, 0xc7, 0x06, 0xcb, 0x19, 0xf6, 0x11, 0x07,
            0x00, 0x40, 0x4b, 0x9a, 0xbf, 0x30, 0x99, 0x13, 0x0c, 0x86,
            0xf7, 0x04, 0x17, 0x06, 0x5f, 0xf9, 0x05, 0x07, 0xc7, 0x07,
            0x00, 0x0e, 0x86, 0xf9, 0x05, 0xb9, 0xc6, 0x1e, 0x07, 0x16,
            0x02, 0x73, 0x08, 0x06, 0x39, 0x26, 0x02, 0x38, 0xe6, 0x05,
            0x02, 0x0e, 0xf8, 0xe8, 0xe6, 0xf4, 0x11, 0xf5, 0x1a, 0x1a,
            0xd8, 0x32, 0x00, 0x27, 0x00, 0x16, 0x3b, 0xd9, 0xf9, 0xf8,
            0xe9, 0x09, 0x38, 0x29, 0x02, 0x42, 0xf6, 0x09, 0x3b, 0x76,
            0xfe, 0xc6, 0xa4, 0x02, 0x3f, 0x16, 0xde, 0xf1, 0xd6, 0xf9,
            0x06, 0x29, 0xf6, 0x07, 0x27, 0x0a, 0xf8, 0xf9, 0x01, 0x79,
            0x19, 0x0e, 0x02, 0x16, 0xd4, 0x1b, 0xf8, 0xf9, 0x03, 0x39,
            0x25, 0xe8, 0xe5, 0x16, 0x19, 0x19, 0xe4, 0x29, 0xe6, 0x18,
            0xd5, 0xf6, 0x09, 0xf8, 0xf9, 0xe6, 0x29, 0x66, 0x00, 0x0e,
            0x38, 0x06, 0x06, 0x06, 0x46, 0x0a, 0xf9, 0x36, 0x06, 0x46,
            0xe6, 0xf1, 0x3d, 0xc6, 0x01, 0x86, 0xb4, 0x06, 0x02, 0x0e,
            0xe4, 0xc4, 0xdf, 0x16, 0xd6, 0x57, 0xf6, 0xf7, 0xed, 0x09,
            0x17, 0xd0, 0x00, 0x0e, 0xc6, 0xe6, 0x05, 0xbe, 0x06, 0x0e,
            0xb9, 0x69, 0xfa, 0xb8, 0x08, 0x0e, 0x78, 0x16, 0x0a, 0xb9,
            0xf6, 0x05, 0x02, 0x0e, 0xe7, 0xf5, 0x07, 0xf7, 0x04, 0xe4,
            0xeb, 0xc9, 0xeb, 0x34, 0x44, 0x36, 0x00, 0x26, 0x7b, 0xc6,
            0xf5, 0x38, 0x59, 0x0a, 0x06, 0x44, 0x1a, 0xfb, 0xf8, 0xed,
            0xc6, 0xd9, 0x05, 0xb9, 0x14, 0x06, 0x82, 0x36, 0xde, 0x78,
            0xf9, 0x0d, 0xf8, 0xe6, 0x05, 0xc0, 0xe9, 0x01, 0x45, 0x97,
            0xfd, 0xc7, 0x06, 0xfe, 0x07, 0x16, 0xda, 0x39, 0x26, 0xfa,
            0x78, 0x26, 0x0e, 0x7b, 0x16, 0x06, 0xfc, 0x26, 0x02, 0x06,
            0x25, 0xea, 0x07, 0xe7, 0xd9, 0x7b, 0x16, 0xf2, 0xc5, 0x39,
            0x0e, 0x3b, 0xd6, 0xf5, 0xbb, 0x16, 0xf6, 0x86, 0x96, 0x0e,
            0x02, 0x0d, 0x37, 0x04, 0xea, 0x06, 0xdb, 0xf9, 0xe6, 0x49,
            0x18, 0x17, 0x16, 0x05, 0xf8, 0xf9, 0x0b, 0xf6, 0x09, 0x11,
            0x07, 0x00, 0x19, 0xe6, 0x7b, 0x5f, 0x31, 0x99, 0x13, 0x0c,
            0x86, 0xf4, 0x04, 0x0b, 0x06, 0x51, 0xf9, 0x02, 0x02, 0x28,
            0xc2, 0x0b, 0xe6, 0x1a, 0x17, 0x00, 0x26, 0x00, 0x56, 0x0a,
            0xc2, 0xd9, 0x01, 0xf9, 0xb9, 0x05, 0x39, 0xe6, 0x05, 0x44,
            0xd9, 0xfd, 0xf9, 0xe6, 0x06, 0x07, 0xf6, 0xf1, 0xb2, 0x06,
            0x06, 0x04, 0xf6, 0xfd, 0x39, 0xf6, 0x15, 0xc7, 0x16, 0x02,
            0x86, 0x18, 0xea, 0x86, 0x16, 0x0a, 0x06, 0xe7, 0xf5, 0x04,
            0xf6, 0xf9, 0x79, 0xe4, 0x01, 0x79, 0x16, 0xda, 0x05, 0xf6,
            0xf9, 0x87, 0x07, 0xfe, 0x47, 0xf9, 0xf1, 0xb9, 0x06, 0x16,
            0xf9, 0x17, 0xfe, 0xc7, 0x19, 0xd6, 0xf9, 0x36, 0xf6, 0x02,
            0x36, 0x44, 0x07, 0x38, 0xfd, 0x29, 0x14, 0x11, 0xe4, 0x0b,
            0xca, 0xe9, 0xe6, 0x41, 0xf5, 0xf2, 0xcf, 0x57, 0x26, 0xf0,
            0xb9, 0x08, 0xff, 0x1b, 0x26, 0x31, 0xd7, 0xd6, 0x0c, 0x68,
            0xf5, 0xd2, 0xe2, 0x39, 0x4d, 0x17, 0xc9, 0x02, 0xd8, 0x37,
            0xf9, 0xf4, 0xfa, 0x0a, 0x48, 0x05, 0x04, 0xd9, 0x14, 0x29,
            0x14, 0x09, 0xe8, 0x4b, 0xe8, 0x11, 0x06, 0x19, 0xec, 0xa4,
            0x24, 0x05, 0x56, 0xc8, 0x49, 0xba, 0x57, 0xf4, 0x52, 0x07,
            0x09, 0xf7, 0xe8, 0x00, 0x0e, 0x46, 0xd9, 0xf9, 0x4e, 0xf9,
            0x01, 0x79, 0x59, 0x01, 0x47, 0x26, 0x02, 0x44, 0xf6, 0x15,
            0x78, 0xf6, 0xf9, 0x02, 0x0e, 0x01, 0xe5, 0x02, 0x08, 0x19,
            0xf9, 0xcb, 0xd4, 0x17, 0x04, 0x28, 0x0a, 0x00, 0x0e, 0x7b,
            0x16, 0xfe, 0x56, 0x16, 0x06, 0x87, 0x16, 0xfd, 0x06, 0x19,
            0xfe, 0x80, 0x19, 0xfa, 0xfb, 0xe6, 0x01, 0x02, 0x0e, 0x36,
            0xe6, 0x03, 0x26, 0x20, 0x2c, 0xd4, 0x3f, 0xf5, 0x39, 0xb4,
            0x0b, 0x00, 0x0e, 0xc6, 0x29, 0x06, 0x79, 0x36, 0x0e, 0xb8,
            0x24, 0x0a, 0x3d, 0xe6, 0xf5, 0x38, 0x19, 0x16, 0x46, 0x09,
            0x0a, 0x02, 0x0d, 0xa7, 0x36, 0x09, 0x06, 0x99, 0xe5, 0xf5,
            0x77, 0x28, 0x28, 0xc6, 0x26, 0xf6, 0x08, 0xc4, 0x07, 0x04,
            0x11, 0x07, 0x00, 0xc3, 0xcc, 0xa4, 0xf2, 0x31, 0x99, 0x13,
            0x0c, 0x86, 0xe9, 0x04, 0x09, 0x06, 0x5e, 0xf9, 0x02, 0x02,
            0xd6, 0x44, 0xd6, 0x39, 0xf8, 0x17, 0x00, 0x0e, 0xf8, 0x29,
            0xfa, 0x87, 0xe6, 0x09, 0xb9, 0x19, 0xfa, 0x85, 0x09, 0x0a,
            0x3b, 0x86, 0x02, 0x86, 0xd9, 0xf9, 0x02, 0x16, 0xef, 0x14,
            0x37, 0x0b, 0x26, 0xd2, 0x08, 0xeb, 0xcb, 0x02, 0xe0, 0x56,
            0x36, 0x0d, 0xf9, 0xe5, 0x14, 0x32, 0xfc, 0x1d, 0xfd, 0x13,
            0x01, 0x24, 0x00, 0x16, 0xc6, 0xc6, 0x31, 0xcc, 0x09, 0xfa,
            0x46, 0x3b, 0xfd, 0xba, 0xe9, 0x01, 0x84, 0x06, 0x06, 0x05,
            0xf6, 0xfd, 0x46, 0x06, 0x16, 0x84, 0x26, 0x02, 0x39, 0xf8,
            0xf9, 0x86, 0x09, 0x0a, 0x06, 0xc6, 0x15, 0x07, 0x09, 0x02,
            0x02, 0x16, 0xc0, 0xfb, 0x09, 0x64, 0x27, 0xf6, 0xaa, 0xe7,
            0xc7, 0x64, 0x04, 0xf8, 0xd7, 0x04, 0x24, 0x56, 0x17, 0x26,
            0xb6, 0x49, 0xec, 0x4b, 0xc8, 0xd8, 0x00, 0x26, 0xc7, 0x08,
            0x06, 0x01, 0xf7, 0x19, 0x06, 0xf6, 0x01, 0x07, 0x28, 0x02,
            0xc6, 0xe9, 0x01, 0x3a, 0xf6, 0x05, 0x38, 0x06, 0x06, 0x47,
            0x17, 0x02, 0xba, 0xc6, 0xf5, 0x46, 0x49, 0xfa, 0x02, 0xc6,
            0x12, 0x3b, 0x27, 0x06, 0xfe, 0x19, 0xfe, 0xbd, 0x66, 0xf2,
            0x44, 0x59, 0x0e, 0x31, 0x06, 0x0e, 0xb8, 0x79, 0x02, 0x06,
            0x76, 0xfa, 0x3e, 0x07, 0x06, 0x70, 0x76, 0xf2, 0x06, 0x56,
            0xf2, 0xfd, 0x29, 0x02, 0x78, 0x56, 0x02, 0x39, 0x26, 0xfa,
            0x02, 0x16, 0x0c, 0x19, 0x38, 0xe2, 0xf6, 0xf2, 0x0b, 0x14,
            0xfb, 0x09, 0xe6, 0x08, 0x29, 0x26, 0xf2, 0x19, 0x1b, 0xfb,
            0xb9, 0xd6, 0x36, 0x47, 0x14, 0x2b, 0x00, 0x0e, 0xc0, 0x06,
            0x32, 0x8a, 0xc9, 0xf1, 0x78, 0x7b, 0xf9, 0x47, 0x16, 0x02,
            0x86, 0x06, 0xfe, 0xb9, 0xf9, 0xfd, 0x02, 0x09, 0x56, 0x07,
            0x07, 0xc8, 0xf7, 0x0b, 0x09, 0x16, 0xf9, 0xf9, 0x27, 0x07,
            0x27, 0xe6, 0x35, 0x25, 0x6b, 0xea, 0xd8, 0xd2, 0xe7, 0x36,
            0x08, 0x10, 0x07, 0x00, 0x0e, 0xca, 0xb8, 0x8e, 0x3e, 0x99,
            0x13, 0x0c, 0x86, 0xf7, 0x04, 0x16, 0x06, 0x5e, 0xf9, 0x00,
            0x0e, 0xc7, 0xe9, 0x2d, 0x06, 0xf6, 0xf9, 0x47, 0xfb, 0x0d,
            0x47, 0x06, 0xfa, 0xb8, 0xe9, 0xfd, 0x87, 0x46, 0x0e, 0x02,
            0x0e, 0x29, 0xca, 0x38, 0x05, 0x47, 0xf2, 0xf8, 0xf9, 0x19,
            0xc5, 0xd9, 0xf5, 0x00, 0x0e, 0x44, 0x17, 0x16, 0x3c, 0xd6,
            0x05, 0x39, 0x75, 0x0e, 0x78, 0xb9, 0xc9, 0xfd, 0xf6, 0x01,
            0x40, 0x36, 0xfe, 0x02, 0x0e, 0xd4, 0x08, 0x28, 0x39, 0x19,
            0xe5, 0x19, 0xd6, 0x2c, 0x03, 0x38, 0xd4, 0x00, 0x16, 0xfd,
            0x29, 0xfe, 0xfa, 0x36, 0xfa, 0x86, 0xa9, 0x16, 0x78, 0xc6,
            0x05, 0xf1, 0x49, 0xfa, 0xf8, 0x07, 0x06, 0xb8, 0x26, 0xe2,
            0xc4, 0x39, 0xfa, 0xc7, 0x27, 0x06, 0x3b, 0x06, 0xda, 0xb9,
            0x36, 0xfa, 0x46, 0xf7, 0xfd, 0x02, 0x0e, 0x39, 0xcb, 0x06,
            0xe4, 0xe9, 0x18, 0x27, 0x55, 0x05, 0xe9, 0xf4, 0xc7, 0x00,
            0x16, 0x3a, 0x26, 0xfe, 0x79, 0x06, 0x02, 0xc7, 0xe9, 0x01,
            0x85, 0xf6, 0x05, 0x06, 0xe6, 0x25, 0x06, 0x27, 0xfa, 0x86,
            0x2b, 0xfa, 0xfa, 0xf9, 0xf9, 0x38, 0x56, 0xfe, 0x47, 0xd9,
            0xf9, 0x38, 0x07, 0xfa, 0x79, 0x16, 0xfa, 0x02, 0x1e, 0x69,
            0xf4, 0xf6, 0xe8, 0x17, 0x44, 0xd4, 0x1d, 0xe4, 0x06, 0xe7,
            0xe9, 0x15, 0x16, 0x26, 0xe8, 0x04, 0x09, 0x29, 0x02, 0xe4,
            0x96, 0x3b, 0xe9, 0x6b, 0xc7, 0x39, 0x13, 0x58, 0x25, 0x1b,
            0xe9, 0xea, 0x64, 0xe7, 0x09, 0x00, 0x0e, 0xf8, 0x09, 0x06,
            0x44, 0x06, 0xe6, 0x39, 0x06, 0x06, 0xc6, 0x07, 0x06, 0x84,
            0x16, 0xe2, 0x47, 0xd6, 0xf1, 0x02, 0x0e, 0x59, 0x17, 0x07,
            0xd4, 0xd7, 0x15, 0x06, 0xf9, 0x09, 0x79, 0x25, 0xd9, 0x00,
            0x0b, 0x8e, 0xd8, 0x09, 0x84, 0xd6, 0xf1, 0xf9, 0x09, 0x0a,
            0x06, 0x06, 0xfa, 0xfb, 0x99, 0x01, 0x86, 0xd9, 0xfd, 0x0f,
            0xf6, 0x2d, 0x82, 0xc6, 0x05, 0x07, 0xfb, 0x05, 0xc3, 0xf9,
            0x05, 0x11, 0x07, 0x00, 0x03, 0x60, 0xf7, 0x2c, 0x3f, 0x99,
            0x13, 0x0c, 0x86, 0xf5, 0x04, 0x08, 0x06, 0x50, 0xf9, 0x02,
            0x04, 0xfc, 0x67, 0x26, 0x00, 0x0e, 0x4e, 0x26, 0xe6, 0xc6,
            0xa9, 0x01, 0x38, 0x07, 0x0e, 0x46, 0x46, 0x0a, 0x39, 0xb9,
            0xfd, 0xc6, 0xf9, 0x01, 0x02, 0x36, 0xf3, 0xf6, 0x03, 0xe9,
            0x18, 0xc6, 0x0b, 0x19, 0x1a, 0x04, 0xd4, 0x34, 0x26, 0x5d,
            0xf9, 0x09, 0xd4, 0x18, 0x02, 0x24, 0x03, 0xfc, 0xf8, 0xed,
            0x07, 0xf7, 0x24, 0x33, 0xf9, 0x18, 0xe8, 0xf6, 0x47, 0x19,
            0xb9, 0xd6, 0x16, 0x67, 0x14, 0x07, 0xeb, 0xfb, 0x16, 0x17,
            0xf7, 0x05, 0x09, 0xe8, 0x18, 0x14, 0x32, 0xd6, 0xd9, 0x0b,
            0x17, 0x15, 0x17, 0xd9, 0x0d, 0xf7, 0x56, 0xf4, 0x28, 0xe6,
            0xf6, 0x06, 0xf9, 0x19, 0xf7, 0x30, 0x05, 0x0b, 0x00, 0x1e,
            0x3c, 0xe9, 0x0d, 0x4e, 0x37, 0x02, 0x46, 0xd9, 0xe9, 0x3b,
            0x16, 0xfa, 0x47, 0x06, 0x0a, 0x04, 0xd7, 0xf9, 0xf9, 0xd9,
            0x05, 0x02, 0x16, 0x02, 0x47, 0x89, 0x09, 0xc4, 0xf9, 0x09,
            0x4f, 0xd9, 0xf9, 0xb9, 0x79, 0x01, 0x49, 0x27, 0x0e, 0x43,
            0x59, 0xed, 0xf9, 0xd9, 0x01, 0xf8, 0x46, 0xfa, 0xc6, 0x29,
            0x02, 0x78, 0xf6, 0x01, 0x02, 0x0e, 0xea, 0x54, 0x04, 0x32,
            0xdd, 0x1b, 0xb9, 0xe5, 0x37, 0x1b, 0x37, 0xf6, 0x00, 0x16,
            0xb8, 0xd6, 0x11, 0xb8, 0x19, 0x0e, 0xb8, 0xf8, 0x15, 0x87,
            0x19, 0x2a, 0x05, 0x79, 0x0a, 0xc6, 0xfb, 0x09, 0x7e, 0x08,
            0x02, 0xb8, 0xe9, 0x05, 0xf9, 0x28, 0xfe, 0x87, 0xd6, 0x25,
            0x79, 0x47, 0x0e, 0x87, 0x29, 0xfe, 0x02, 0x1e, 0x0f, 0x06,
            0x28, 0xd2, 0xf2, 0xf6, 0x28, 0x49, 0x17, 0x04, 0xaa, 0x26,
            0xf9, 0xf6, 0xc7, 0x17, 0x27, 0x09, 0xe6, 0x54, 0x07, 0x33,
            0xa9, 0x09, 0xec, 0xe8, 0x02, 0x32, 0xf5, 0x29, 0xc8, 0x36,
            0xe8, 0x52, 0x45, 0x04, 0x00, 0x01, 0x47, 0xd9, 0xf9, 0x38,
            0x86, 0x01, 0x84, 0xf9, 0x05, 0x44, 0x19, 0x06, 0x85, 0xe9,
            0x09, 0x06, 0x84, 0x06, 0x00, 0xb6, 0x60, 0x5d, 0x71, 0x3f,
            0x99, 0x13, 0x0c, 0x86, 0xf5, 0x04, 0x08, 0x06, 0x5d, 0xf9,
            0x02, 0x26, 0x07, 0x0a, 0x08, 0x33, 0xc4, 0x17, 0xdf, 0x37,
            0x18, 0x04, 0xf9, 0xc6, 0xf9, 0x07, 0x16, 0x27, 0xe6, 0x19,
            0x19, 0xe8, 0xe6, 0x37, 0x57, 0x17, 0xa6, 0xd7, 0x16, 0x77,
            0x28, 0x26, 0xc8, 0xf6, 0xeb, 0x54, 0xf9, 0x07, 0xb9, 0xe9,
            0x06, 0x27, 0x44, 0x16, 0xeb, 0xe7, 0x04, 0x23, 0xf7, 0xe9,
            0x00, 0x16, 0xb8, 0xc9, 0x09, 0x46, 0x26, 0x06, 0x04, 0x16,
            0xfa, 0xfb, 0x08, 0xf6, 0x79, 0x87, 0x0a, 0x46, 0x46, 0xfe,
            0xbe, 0xc6, 0xf1, 0x06, 0x66, 0xfe, 0xc7, 0xd9, 0x0d, 0xfd,
            0xf6, 0x09, 0x02, 0x86, 0xfe, 0x45, 0x07, 0xf2, 0x02, 0x16,
            0xfd, 0xd8, 0x08, 0xf6, 0xc6, 0x27, 0x2a, 0x29, 0x2d, 0x09,
            0x24, 0xe4, 0xd6, 0xf9, 0x29, 0x27, 0x16, 0x03, 0xfa, 0x37,
            0xca, 0x14, 0xe5, 0x37
        ])
    }
}
